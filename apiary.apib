FORMAT: 1A
HOST: https://secure.cleveranalytics.com

# CleverAnalytics

_Note:_ All examples mentioned here are also available in a [configuration file](https://bitbucket.org/clevermaps/can-postman/downloads/can-postman.json)
for the [Postman](https://www.getpostman.com/) tool.

# Group Authentication
CleverAnalytics uses OAuth as an authentication protocol.
Authorization process has two steps:

Firstly, you provide an user email and password to get an unique refresh token with validity during the browser session or 90 days (remember me). There can be more then one active refresh token for your account at the same time. Thanks to it you can use separate refresh tokens in your laptop, mobile phone and tablet application.
Refresh token is set as server cookie, with httpOnly flag - forbiden access from e.g. JS Client. 

Secondly, you will use the valid refresh token to obtain an access token that is necessary for authentication all request. There must be set a HTTP Header Authentication: Bearer... Access token is a JWT Token and  has a limited validity to 15 minutes, is encrypted, and can be very quickly verified by the resource servers.

For a detailed insight into authentication see our [blog post](http://blog.cleveranalytics.com/post/106512852494/implementing-token-based-authentication-in-a).

## Error Codes
* 400001 - incorrect old password
* 400002 - unsupported language exception
* 400003 - access to account denied, bearer token does not match requested accountId
* 400004 - insuciffient OAuth scope. Scope does not contains all required properties.
* 400005 - update of last project admin denied. There needs to be always at least one user in Admin role in each project.
* 400006 - metric values distribution for given metric and filters is not supported. The min and max values equals and therefore cannot be splitted into buckets.


## Login [/rest/oauth/login]
### Login [POST]
Login resource verify your credentials and provide Account details and ApiKey.
Invalid user email or password.

+ Request (application/json)

        {
            "email": "john@cleveranalytics.com",
            "password": "SECRET_PASSWORD",
            "rememberMe": 1
        }

+ Response 200 (application/json)

    + Headers
    
            Set-Cookie: CA-ApiKeyToken={md5-apikey-id-and-secret}; path=/rest; secure; HttpOnly
        
    + Body
    
            {
                "id": "B3mTX6pCTRBSIMRej4q0",
                "fullName": "John Smith",
                "email": "john@cleveranalytics.com",
                "status": "ENABLED",
                "preferences": {
                    "language": "en",
                    "lastActiveProject": "/rest/projects/ncesksvg7rjeri7v"                
                },
                "onboarding": {
                    "introShown": [
                        "/rest/projects/vb2b3d8v91jao331/md/views/f2ef07u2c5tikd26",
                        "/rest/projects/t1n92mu7l0toa84i/md/views/e4cflb6pr6h490fn"
                    ],
                    "tipsShown": [
                        "basicTools",
                        "extBlockRanking"
                    ]
                },
                "links": [
                    {
                        "rel": "self",
                        "href": "/rest/accounts/B3mTX6pCTRBSIMRej4q0"
                    },
                    {
                        "rel": "password",
                        "href": "/rest/accounts/B3mTX6pCTRBSIMRej4q0/password"
                    },
                    {
                        "rel": "preferences",
                        "href": "/rest/accounts/B3mTX6pCTRBSIMRej4q0/preferences"
                    }
                ]
            }


+ Response 400 (application/json)

        {
            "timestamp": 1407139937053,
            "status": 400,
            "error": "Bad Request",
            "message": "Unauthorized. Not valid credentials.",
            "path": "/rest/oauth/login"
        }
        
### Logout [DELETE]
Log out the user and deletes all active ApiKeys. It means that user will be logged out all devices.
            
+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)


## Token [/rest/oauth/token]
Second phase of authentication.
Change the obtained refresh token - stored in cookie for a CleverAnalytics Access token.
Access token must be present in request header Authentication when calling any secured resources.

### Token [GET]

+ Request (application/json)

    + Headers
    
            Cookie: CA-ApiKeyToken={md5-apikey-id-and-secret}; path=/rest; secure; HttpOnly
    + Body
    
+ Response 200 (application/json)

    + Body

            {
                "accessToken": "eyJTE2fQ.OrCBfdsafsdmGR97-fdsaDd-fsdjfgLCBerU5GHo5NvdwujhjfnI",
                "expiresIn": 900,
                "tokenType": "Bearer"
            }    

# Group Accounts
Global set of user accounts. It contains all information about CleverAnalytics users in current cluster instance.

## Accounts [/rest/accounts]

### Register new Account [POST]

#### Response statuses
* 201 - Created
* 400 - Bad request
* 409 - Conflict - account with this email already exists

+ Request (application/json)

        {
            "givenName": "John",
            "surname": "Smith",
            "email": "john@cleveranalytics.com",
            "password": "SECRET_PASSWORD",
            "preferences": {
                "language": "en",
                "sendNewsletter": true
            },
            "utmParameters": {
                "medium": "facebook",
                "source": "cpc",
                "campaign": "myCampaign",
                "referrer": ""
            }
        }

+ Response 201 (application/json)

        {
            "id": "B3mTX6pCTRBSIMRej4q0",
            "fullName": "John Smith",
            "email": "john@cleveranalytics.com",
            "status": "ENABLED",
            "preferences": {
                "language": "en",
                "sendNewsletter": true
                "lastActiveProject": null
            },
            "onboarding": {
                "introShown": [
                ],
                "tipsShown": [
                ]
            },
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/accounts/B3mTX6pCTRBSIMRej4q0"
                },
                {
                    "rel": "password",
                    "href": "/rest/accounts/B3mTX6pCTRBSIMRej4q0/password"
                },
                {
                    "rel": "preferences",
                    "href": "/rest/accounts/B3mTX6pCTRBSIMRej4q0/preferences"
                }
            ]                
        }
    
## Accounts [/rest/accounts?email={email}]

### Find Account [GET]
Find a general information about an account identified by `email`. Search is limited on `ENABLED` accounts and
some basic information about the account are returned.

#### Response statuses
* 200 - Ok
* 404 - Not Found

+ Parameters
    + email: `john@cleveranalytics.com` (optional, string) User email address

+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

        {
            "fullName": "John Smith",
            "email": "john@cleveranalytics.com",
            "preferences": {}                
        }


## Account [/rest/accounts/{accountId}]
Account for user identified *accountId*.
The resource has two type of responses:
* full account datail (request on currently authenticated account)
    * see example response bellow
* restricted account detail - when getting details about another user account
    * `id`, `fullName`, `language` and `status` properties are returned

#### Response statuses
* 200 - OK
* 404 - Not Found

### Get Current Account [GET]

+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}
            Accept: application/json

+ Response 200 (application/json)

    + Body
    
            {
                "id": "B3mTX6pCTRBSIMRej4q0",
                "fullName": "John Smith",
                "email": "john@cleveranalytics.com",
                "status": "ENABLED",
                "preferences": {
                    "language": "en",
                    "lastActiveProject": "/rest/projects/ncesksvg7rjeri7v"                
                },
                "onboarding": {
                    "introShown": [
                        "/rest/projects/vb2b3d8v91jao331/md/views/f2ef07u2c5tikd26",
                        "/rest/projects/t1n92mu7l0toa84i/md/views/e4cflb6pr6h490fn"
                    ],
                    "tipsShown": [
                        "basicTools",
                        "extBlockRanking"
                    ]
                },
                "links": [
                    {
                        "rel": "self",
                        "href": "/rest/accounts/B3mTX6pCTRBSIMRej4q0"
                    },
                    {
                        "rel": "password",
                        "href": "/rest/accounts/B3mTX6pCTRBSIMRej4q0/password"
                    },
                    {
                        "rel": "preferences",
                        "href": "/rest/accounts/B3mTX6pCTRBSIMRej4q0/preferences"
                    }
                ]                
            }

## Current Account [/rest/accounts/current]
Account for user identified by his/her Bearer token. Resource is the same as the */rest/accounts/{accountId}* but is not necessary to know *accountId*.
### Get Current Account [GET]

+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}
            Accept: application/json

+ Response 200 (application/json)

    + Body
    
            {
                "id": "B3mTX6pCTRBSIMRej4q0",
                "fullName": "John Smith",
                "email": "john@cleveranalytics.com",
                "status": "ENABLED",
                "preferences": {
                    "language": "en",
                    "lastActiveProject": "/rest/projects/ncesksvg7rjeri7v"                
                },
                "onboarding": {
                    "introShown": [
                        "/rest/projects/vb2b3d8v91jao331/md/views/f2ef07u2c5tikd26",
                        "/rest/projects/t1n92mu7l0toa84i/md/views/e4cflb6pr6h490fn"
                    ],
                    "tipsShown": [
                        "basicTools",
                        "extBlockRanking"
                    ]
                },
                "links": [
                    {
                        "rel": "self",
                        "href": "/rest/accounts/B3mTX6pCTRBSIMRej4q0"
                    },
                    {
                        "rel": "password",
                        "href": "/rest/accounts/B3mTX6pCTRBSIMRej4q0/password"
                    },
                    {
                        "rel": "preferences",
                        "href": "/rest/accounts/B3mTX6pCTRBSIMRej4q0/preferences"
                    }
                ]                
            }

## Password for Account [/rest/accounts/{accountId}/password]
Set password for user Account. New password must match all of following restrictions:
* minimal lenght 8 characters
* must contains at least one uppercase character
* must contains at least one lowercase character
* must contains at least one numeric character

#### Response statuses
* 204 - OK - password was changed
* 400 - Bad request or given password does not match conditions above or the old password is invalid
##### Error Codes
    * 400001 - incorrect old password
* 403 - Forbidden - *account* does not match user Account in Bearer *Authorization* header
##### Error Codes
    * 400003 - access to account denied, bearer token does not match requested accountId

#### Security
User is allowed to change only it's own password. It means that Bearer token must match {accountId}

### Change password [PUT]

+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}

    + Body
    
            {
                "oldPassword": "PREVIOUS_PASSWORD",
                "newPassword": "NEW_PASSWORD"
            }
            
+ Response 204

## Reset Password for Account [/rest/accounts/passwordReset]
Ask for resetting password for Account identified by `email`. If the request is accepted, the server sends a confirmation email with random `token` to given email address.

### Send Password Reset Token [POST]
Create a new request for resetting password.

#### Response statuses
* 201 - Created - created a new request for resetting account's password
* 404 - Not Found - no account was found for given email address

#### Security
Unauthorized resource, annonymous users are allowed to ask for reseting the password.

+ Request (application/json)

    + Body
    
            {
                "email": "john@cleveranalytics.com"
            }
            
+ Response 201

## Reset Password for Account [/rest/accounts/passwordReset/{token}]

### Verify Password Reset Token [GET]
Test if given token exists and is valid.

#### Response statuses
* 200 - OK - token exists and is valid
* 404 - Not Found - requested token was not found

#### Security
Unauthorized resource, annonymous users are allowed to verify token.

+ Response 200

### Reset Password [PUT]
Finish the process of reseting the password by sending a valid token and a new password.

#### Response statuses
* 204 - No Content - OK, account password was reset to the new password
* 400 - Bad request or new password does not match minimal requirements for new password. (see above)
* 404 - Not Found - requested token was not found

#### Security
Unauthorized resource, annonymous users are allowed to verify token.

+ Request (application/json)

    + Body
    
            {
                "newPassword": "NEW_PASSWORD"
            }
            
+ Response 204

## Account Preferences [/rest/accounts/{accountId}/preferences]
Preferences for user Account. Structure contains currently two keys:
* language - prefered languge for user (supported values: "en", "cs")
* lastActiveProject - project that was last active for a user
Both these preferences are used by CleverAnalytics Client JavaScript application and have no direct impact on backend behaviour.

#### Response statuses
* 204 - OK - preferences were changed
* 400 - Bad request
##### Error Codes
    * 400002 - unsupported language
* 403 - Forbidden - *account* does not match user Account in Bearer *Authorization* header
##### Error Codes
    * 400003 - access to account denied, bearer token does not match requested accountId

#### Security
User is allowed to read and change only it's own preferences. It means that Bearer token must match {accountId}


### Change preferences [PUT]
Updates the preferences by merge. If some of preference keys is not present, value of this key is NOT reset but only given keys are updated.

+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}

    + Body
    
            {
                "lastActiveProject": "/rest/projects/kfdkssvg7rjeri1c"
            }
            
+ Response 204


## Account Onboarding [/rest/accounts/{accountId}/onboarding]
Section of account profile for tracking onboarding steps for earch user. It has two sections:
* introShown - tracks the project views that were already visited by current user
* tipsShown - list of unique tips that were already presented to current user

#### Response statuses
* 204 - OK - onboarding were changed
* 400 - Bad request

#### Security
User is allowed to read and change only it's own preferences. It means that Bearer token must match {accountId}


### Change onboarding [PUT]
Update the onboarding object. The previos version is replaced by the new one.

+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}

    + Body
    
            {
                "introShown": [
                    "/rest/projects/vb2b3d8v91jao331/md/views/f2ef07u2c5tikd26",
                    "/rest/projects/t1n92mu7l0toa84i/md/views/e4cflb6pr6h490fn"
                ],
                "tipsShown": [
                    "basicTools",
                    "extBlockRanking"
                ]
            }

+ Response 204

# Group Bootstrap
## Bootstrap [/rest/bootstrap]
### Bootstrap [GET]
Get general information as user details, settings, projects and preferences.

+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

    + Body
    
            {
                "account": {
                    "id": "B3mTX6pCTRBSIMRej4q0",
                    "fullName": "John Smith",
                    "email": "john@cleveranalytics.com",
                    "status": "ENABLED",
                    "preferences": {
                        "language": "en",
                        "lastActiveProject": "/rest/projects/ncesksvg7rjeri7v"                
                    },
                    "onboarding": {
                        "introShown": [
                            "/rest/projects/vb2b3d8v91jao331/md/views/f2ef07u2c5tikd26",
                            "/rest/projects/t1n92mu7l0toa84i/md/views/e4cflb6pr6h490fn"
                        ],
                        "tipsShown": [
                            "basicTools",
                            "extBlockRanking"
                        ]
                    }              
                },
                "projects": {
                    "content": [
                        {
                            "id": "ncesksvg7rjeri7v",
                            "title": "Testing project",
                            "description": "Project description",
                            "status": "ENABLED",
                            "share": "PRIVATE",
                            "createdAt": 1415132126985,
                            "modifiedAt": 1415132126985,
                            "membership": {
                                "id": "he1deh9g0pba0ook",
                                "accountId": "B3mTX6pCTRBSIMRej4q0",
                                "role": "ADMIN",
                                "status": "ENABLED",
                                "createdAt": 1418366533648,
                                "modifiedAt": 1418366533648
                            },
                            "links": [
                                {
                                    "rel": "self",
                                    "href": "/rest/projects/ncesksvg7rjeri7v"
                                },
                                {
                                    "rel": "createdBy",
                                    "href": "/rest/accounts/O3kTMX6pCTRBSIMRej4q0"
                                },
                                {
                                    "rel": "membership",
                                    "href": "/rest/projects/ncesksvg7rjeri7v/members?accountId=O3kTMX6pCTRBSIMRej4q0"
                                },
                                {
                                    "rel": "members",
                                    "href": "/rest/projects/ncesksvg7rjeri7v/members{?page,size,sort}"
                                }
                            ]
                        }
                    ],
                    "links": [
                        {
                            "rel": "self",
                            "href": "/rest/projects{?page,size,sort}"
                        }
                    ],
                    "page": {
                        "size": 20,
                        "totalElements": 1,
                        "totalPages": 1,
                        "number": 0
                    }
                }
            }            


# Group Projects
## Projects [/rest/projects{?size,page,sort,share,expand}]
### List Projects [GET]
Get list of projects for authenticated account. 

#### Security
Resource return only those projects where the authenticated user is a member.

+ Parameters
    + size = `20` (optional, number)
    + page = `0` (optional, number)
    + sort: `title` (string, optional)
    + share (enum[String],optional)
        Filter project list by `share` attribute.
        + Members
            + `demo`
            + `dimension`
    + expand: `membership` (enum[String], optional)
        Expand selected attribute(s) to minimalize roundtrips.
        + Members
            + `membership` - expand membership attribute

+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}
            Accept: application/json

+ Response 200

        {
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/projects?share=demo{&page,size,sort}"
                }
            ],
            "content": [
                {
                    "id": "vb2b3d8v91jao331",
                    "title": "Retail Solution DEMO",
                    "description": null,
                    "status": "ENABLED",
                    "share": "DEMO",
                    "createdAt": 1499767558891,
                    "modifiedAt": 1499767558918,
                    "services": {
                        "md": "/rest/projects/vb2b3d8v91jao331/md"
                    },
                    "links": [
                        {
                            "rel": "membership",
                            "href": "/rest/projects/vb2b3d8v91jao331/members?accountId=00ubfu6dpmnTMIQKs0h7"
                        },
                        {
                            "rel": "createdBy",
                            "href": "/rest/accounts/5DKknL3P6uT3DKhmuprNrU"
                        },
                        {
                            "rel": "md",
                            "href": "/rest/projects/vb2b3d8v91jao331/md"
                        },
                        {
                            "rel": "self",
                            "href": "/rest/projects/vb2b3d8v91jao331"
                        },
                        {
                            "rel": "members",
                            "href": "/rest/projects/vb2b3d8v91jao331/members"
                        }
                    ]
                }
            ],
            "page": {
                "size": 20,
                "totalElements": 1,
                "totalPages": 1,
                "number": 0
            }
        }


### Create New Project [POST]
Create a new project and set the authenticated user as the project member in *ADMIN* project role.

+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}

+ Request (application/json)

        {
            "title": "Testing project",
            "description": "Project description",
            "status": "ENABLED"
        }

+ Response 201 (application/json)

        {
            "id": "ncesksvg7rjeri7v",
            "title": "Testing project",
            "description": "Project description",
            "status": "ENABLED",
            "share": "PRIVATE",
            "createdAt": 1415132126985,
            "modifiedAt": 1415132126985,
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/projects/ncesksvg7rjeri7v"
                },
                {
                    "rel": "createdBy",
                    "href": "/rest/accounts/O3kTMX6pCTRBSIMRej4q0"
                },
                {
                  "rel": "membership",
                  "href": "/rest/projects/ncesksvg7rjeri7v/members?accountId=O3kTMX6pCTRBSIMRej4q0"
                },
                {
                    "rel": "members",
                    "href": "/rest/projects/ncesksvg7rjeri7v/members{?page,size,sort}"
                },
                {
                  "rel": "metadata",
                  "href": "/rest/projects/ncesksvg7rjeri7v/metadata"
                }
            ]
        }

## Project [/rest/projects/{projectId}{?expand}]

### Get Project [GET]
Get project by given project *id*. 

#### Security
Accees is restricted only to users that are members of given project.

+ Parameters 
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project
    + expand: `membership` (enum[String], optional)
        Expand selected attribute(s) to minimalize roundtrips.
        + Members
            + `membership` - expand membership attribute

+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}
            Accept: application/json

+ Response 200 (application/json)

        {
            "id": "vb2b3d8v91jao331",
            "title": "Retail Solution DEMO",
            "description": null,
            "status": "ENABLED",
            "share": "DEMO",
            "createdAt": 1499767558891,
            "modifiedAt": 1499767558918,
            "services": {
                "md": "/rest/projects/vb2b3d8v91jao331/md"
            },
            "membership": null,
            "links": [
                {
                    "rel": "membership",
                    "href": "/rest/projects/vb2b3d8v91jao331/members?accountId=00ubfu6dpmnTMIQKs0h7"
                },
                {
                    "rel": "createdBy",
                    "href": "/rest/accounts/5DKknL3P6uT3DKhmuprNrU"
                },
                {
                    "rel": "md",
                    "href": "/rest/projects/vb2b3d8v91jao331/md"
                },
                {
                    "rel": "self",
                    "href": "/rest/projects/vb2b3d8v91jao331"
                },
                {
                    "rel": "members",
                    "href": "/rest/projects/vb2b3d8v91jao331/members"
                }
            ]
        }

### Update Project [PUT]
Update the project. 

#### Security
Restricted to *ADMIN* project role.

+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}

+ Request (application/json)

        {
            "title": "New Title for Project",
            "description": "Project description",
            "status": "ENABLED"
        }
        
+ Response 200 (application/json)

        {
            "id": "ncesksvg7rjeri7v",
            "title": "New Title for Project",
            "description": "Project description",
            "status": "ENABLED",
            "share": "PRIVATE",
            "createdAt": 1415132126985,
            "modifiedAt": 1415132342323,
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/projects/ncesksvg7rjeri7v"
                },
                {
                    "rel": "createdBy",
                    "href": "/rest/accounts/O3kTMX6pCTRBSIMRej4q0"
                },
                {
                  "rel": "membership",
                  "href": "/rest/projects/ncesksvg7rjeri7v/members?accountId=O3kTMX6pCTRBSIMRej4q0"
                },
                {
                    "rel": "members",
                    "href": "/rest/projects/ncesksvg7rjeri7v/members{?page,size,sort}"
                }
            ]
        }            
        
### Delete Project [DELETE]
Remove project

#### Security
Restricted to *ADMIN* project role.

+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}

+ Response 204 (application/json)

## Members [/rest/projects/{projectId}/members{?size,page,sort,expand}]
### List Members [GET]
Get list of project members.

#### User Roles
The membership is a relation between Account and Project and Project Role. The role defines set of persmissions. CleverAnalytics supports following project roles:
* VIEWER - can view project dashboards and map views
* EDITOR - extends VIEWER role, it has persmissions to update and delete project metadata
* ADMIN - can manage project and invite new users
* LOAD_DATA - write only role for updating existing dataset (special role for data integration usecase)

#### Security
Restricted to *ADMIN* project role.

+ Parameters 
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project
    + size = `20` (optional, number)
    + page = `0` (optional, number)
    + sort = `null` (optional, string, `role`)
    + expand: `account` (enum[String], optional)
        Expand selected attribute(s) to minimalize roundtrips.
        + Members
            + `account` - expand account attribute

+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}
            Accept: application/json

+ Response 200 (application/json)

        {
            "content": [
                {
                    "id": "jfjf0ak3kflam",
                    "accountId": "O3kTMX6pCTRBSIMRej4q0",
                    "role": "ADMIN",
                    "status": "ENABLED",
                    "links": [
                        {
                            "rel": "self",
                            "href": "/rest/projects/ncesksvg7rjeri7v/members/jfjf0ak3kflam"
                        },
                        {
                            "rel": "project",
                            "href": "/rest/projects/ncesksvg7rjeri7v"
                        },
                        {
                            "rel": "account",
                            "href": "/rest/accounts/O3kTMX6pCTRBSIMRej4q0"
                        }
                    ]
                }
            ],
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/projects/ncesksvg7rjeri7v/members{?page,size,sort}"
                }
            ],
            "page": {
                "size": 20,
                "totalElements": 8,
                "totalPages": 1,
                "number": 0
            }
        }

### Add new Member [POST]
Add new project member and assign a role.
The user is added into the project without any cooperation (acknowledge) with invited user.

See the Invitation resource too. It allows to invite a new member by email address and sends an invitation email.

#### Security
Restricted to *ADMIN* project role.

+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}

+ Response 201 (application/json)

        {
            "accountId": "O3kTMX6pCTRBSIMRej4q0",
            "role": "EDITOR"
            "status": "ENABLED",
        }

## Membership

### Get Membership by AccountId [GET /rest/projects/{projectId}/members{?accountId,expand}]
Get membership for given project and accountId

#### Security
Restricted to *ADMIN* project role or is allowed when *accountId* corresponds with authenticated user. 

+ Parameters 
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project
    + accountId: `DUMxzJ6cMxe4wJRXmFgf` (String, optional) id of user account to get
    + expand: `account` (enum[String], optional)
        Expand selected attribute(s) to minimalize roundtrips.
        + Members
            + `account` - expand account attribute
            
+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}
            Accept: application/json

+ Response 200 (application/json)

        {
            "id": "jfjf0ak3kflam",
            "accountId": "O3kTMX6pCTRBSIMRej4q0",
            "role": "ADMIN",
            "status": "ENABLED",
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/projects/ncesksvg7rjeri7v/members/jfjf0ak3kflam"
                },
                {
                    "rel": "project",
                    "href": "/rest/projects/ncesksvg7rjeri7v"
                },
                {
                    "rel": "account",
                    "href": "/rest/accounts/O3kTMX6pCTRBSIMRej4q0"
                }
            ]
        }

### Get Membership by Id [GET /rest/projects/{projectId}/members/{id}]
Get detail of user membership in project

#### Security
Restricted to *ADMIN* project role. 

+ Parameters
    + projectId: `vb2b3d8v91jao331` (string) - The ID of the actual project
    + id: `hcdjbj20rboo7go2` (string) - The ID of a record in members table

+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}
            Accept: application/json            
            
+ Response 200 (application/json)

        {
            "id": "jfjf0ak3kflam",
            "accountId": "O3kTMX6pCTRBSIMRej4q0",
            "role": "ADMIN",
            "status": "ENABLED",
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/projects/ncesksvg7rjeri7v/members/jfjf0ak3kflam"
                },
                {
                    "rel": "project",
                    "href": "/rest/projects/ncesksvg7rjeri7v"
                },
                {
                    "rel": "account",
                    "href": "/rest/accounts/O3kTMX6pCTRBSIMRej4q0"
                }
            ]
        }

### Update Membership [PUT /rest/projects/{projectId}/members/{id}]
Change the user role or status in a project.

#### Response statuses
* 200 - OK
* 400 - Bad request
##### Error Codes
    * 400005 - update of last project admin denied. There needs to be always at least one user in Admin role in each project.
* 403 - Forbidden

#### Security
Restricted to *ADMIN* project role. 

+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}

+ Request (application/json)

        {
            "role": "EDITOR",
            "status": "DISABLED"
        }    

+ Response 200 (application/json)

        {
            "id": "jfjf0ak3kflam",
            "accountId": "O3kTMX6pCTRBSIMRej4q0",
            "role": "EDITOR",
            "status": "DISABLED",
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/projects/ncesksvg7rjeri7v/members/jfjf0ak3kflam"
                },
                {
                    "rel": "account",
                    "href": "/rest/accounts/O3kTMX6pCTRBSIMRej4q0"
                }
            ]
        }
        
### Disable Membership [DELETE /rest/projects/{projectId}/members/{id}]
Disables membership of user in project

#### Response statuses
* 204 - No content
* 400 - Bad request
##### Error Codes
    * 400005 - update of last project admin denied. There needs to be always at least one user in Admin role in each project.
* 403 - Forbidden


#### Security
Restricted to *ADMIN* project role. 

+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}

+ Response 204 (application/json)

## Project Invitations [/rest/projects/{projectId}/invitations{?status,size,page,sort}]

These endpoints work with invitations to a project. If you want to work with an actual 
invitation hash, see the [User Invitations group](#user-invitations)

### List Invitations [GET]
Get list of project invitations. 

#### Security
Restricted to *ADMIN* project role.

+ Parameters 
    + projectId: `vb2b3d8v91jao331` (string) - The ID of the actual project
    + status = `ACCEPTED` (string, optional)
    + size = `20` (number, optional)
    + page = `0` (number, optional)
    + sort (string, optional)

+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}
            Accept: application/json

+ Response 200 (application/json)

        {
            "content": [
                {
                    "id": "jfjf0ak3kflam",
                    "email": "john.smith@cleveranalytics.com",
                    "role": "VIEWER",
                    "status": "PENDING",
                    "links": [
                        {
                            "rel": "self",
                            "href": "/rest/projects/ncesksvg7rjeri7v/invitation/jfjf0ak3kflam"
                        },
                        {
                            "rel": "project",
                            "href": "/rest/projects/ncesksvg7rjeri7v"
                        },
                        {
                            "rel": "createdBy",
                            "href": "/rest/accounts/O3kTMX6pCTRBSIMRej4q0"
                        },
                        {
                            "rel": "modifiedBy",
                            "href": "/rest/accounts/O3kTMX6pCTRBSIMRej4q0"
                        }                                 
                    ]
                }
            ],
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/projects/ncesksvg7rjeri7v/invitations{?page,size,sort}"
                }
            ],
            "page": {
                "size": 20,
                "totalElements": 8,
                "totalPages": 1,
                "number": 0
            }
        }

### Create New Invitation [POST]
Create a new invitation to the project for a user. User is specified by email address and invitation contains a project role.

#### Response statuses
* 201 - Accepted - new invitation was created
* 400 - Bad request

#### Security
Restricted to *ADMIN* project role.

+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}

    + Body

            {
                "email": "john.smith@cleveranalytics.com",
                "role": "VIEWER"
            }

+ Response 201 (application/json)

        {
            "id": "qpewijr3sk",
            "email": "john.smith@cleveranalytics.com",
            "role": "VIEWER",
            "status": "PENDING",
            "createdAt": 1415132126985,
            "modifiedAt": 1415132126985,
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/projects/ncesksvg7rjeri7v/invitation/jfjf0ak3kflam"
                },
                {
                    "rel": "project",
                    "href": "/rest/projects/ncesksvg7rjeri7v"
                },
                {
                    "rel": "createdBy",
                    "href": "/rest/accounts/O3kTMX6pCTRBSIMRej4q0"
                },
                {
                    "rel": "modifiedBy",
                    "href": "/rest/accounts/O3kTMX6pCTRBSIMRej4q0"
                }                
            ]
        }

### Get Invitation [GET /rest/projects/{projectId}/invitations/{id}]
Get detail of an invitation. An invitation status value is one of:
* PENDING
* ACCEPTED
* CANCELED
* EXPIRED

#### Security
Restricted to *ADMIN* project role.

+ Parameters
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project
    + id: `aH2b62AIqwNswG5VMlye` (string) - The ID of an actual invitation

+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}
            Accept: application/json

+ Response 200 (application/json)

        {
            "id": "qpewijr3sk",
            "email": "john.smith@cleveranalytics.com",
            "role": "VIEWER",
            "status": "ACCEPTED",
            "createdAt": 1415132126985,
            "modifiedAt": 1415137986911,
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/projects/ncesksvg7rjeri7v/invitation/jfjf0ak3kflam"
                },
                {
                    "rel": "project",
                    "href": "/rest/projects/ncesksvg7rjeri7v"
                },
                {
                    "rel": "createdBy",
                    "href": "/rest/accounts/O3kTMX6pCTRBSIMRej4q0"
                },
                {
                    "rel": "modifiedBy",
                    "href": "/rest/accounts/O3kTMX6pCTRBSIMRej4q0"
                }                
            ]
        }

### Update Invitation [PUT /rest/projects/{projectId}/invitations/{invitation}]

Cancel or resend project invitation. If an invitation has status PENDING, project Admin can cancel it.
If the invitation has status CANCELED, EXPIRED or PENDING, user can activate it or resend the invivation email by PUTing the status PENDING.

Invitations with status ACCEPTED cannot be updated anymore.
After 30 days the invitation expires if the invited user does not accept it.

Following table describe allowed status transition for invitation:

|original status|PUT request|new status|
|---|---|---|
|CANCELED|PENDING |PENDING |
|EXPIRED |PENDING |PENDING |
|PENDING |CANCELED|CANCELED|

#### Response statuses
* 200 - OK
* 400 - Bad request

#### Security
Restricted to *ADMIN* project role.

+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}

    + Body

            {
                "status": "PENDING"
            }
        
+ Response 200 (application/json)

        {
            "id": "qpewijr3sk",
            "email": "john.smith@cleveranalytics.com",
            "role": "VIEWER",
            "status": "PENDING",
            "createdAt": 1415132126985,
            "modifiedAt": 1415137986911,
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/projects/ncesksvg7rjeri7v/invitation/jfjf0ak3kflam"
                },
                {
                    "rel": "project",
                    "href": "/rest/projects/ncesksvg7rjeri7v"
                },
                {
                    "rel": "createdBy",
                    "href": "/rest/accounts/O3kTMX6pCTRBSIMRej4q0"
                },
                {
                    "rel": "modifiedBy",
                    "href": "/rest/accounts/O3kTMX6pCTRBSIMRej4q0"
                }
            ]
        }

### Cancel Invitation [DELETE]
If an invitation has status PENDING, project Admin can cancel it by calling DELETE method.
Calling of the method DELETE equals to PUT of the state CANCELED above.


#### Security
Restricted to *ADMIN* project role.

+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

        {
            "id": "qpewijr3sk",
            "email": "john.smith@cleveranalytics.com",
            "role": "VIEWER",
            "status": "CANCELED",
            "createdAt": 1415132126985,
            "modifiedAt": 1415137986911,
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/projects/ncesksvg7rjeri7v/invitation/jfjf0ak3kflam"
                },
                {
                    "rel": "project",
                    "href": "/rest/projects/ncesksvg7rjeri7v"
                },
                {
                    "rel": "createdBy",
                    "href": "/rest/accounts/O3kTMX6pCTRBSIMRej4q0"
                },
                {
                    "rel": "modifiedBy",
                    "href": "/rest/accounts/O3kTMX6pCTRBSIMRej4q0"
                }
            ]
        }

# Group User Invitations

## User Invitation [/rest/invitations/{invitationHash}]

### Get User Invitation [GET]

Get detail of an invitation. An invitation status value is one of:
* PENDING
* ACCEPTED
* CANCELED
* EXPIRED

+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

        {
            "id": "qpewijr3sk",
            "email": "john.smith@cleveranalytics.com",
            "role": "VIEWER",
            "status": "PENDING",
            "createdAt": 1415132126985,
            "modifiedAt": 1415137986911,
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/projects/ncesksvg7rjeri7v/invitation/jfjf0ak3kflam"
                },
                {
                    "rel": "project",
                    "href": "/rest/projects/ncesksvg7rjeri7v"
                },
                {
                    "rel": "createdBy",
                    "href": "/rest/accounts/O3kTMX6pCTRBSIMRej4q0"
                },
                {
                    "rel": "modifiedBy",
                    "href": "/rest/accounts/O3kTMX6pCTRBSIMRej4q0"
                },
                {
                    "rel": "accountDetail",
                    "href": "/rest/accounts/email=john.smith@cleveranalytics.com"
                }
            ]
        }


### Accept User Invitation [POST]

This resource allows accepting an invitation by an invited user.
The URL cointains a secret invitationHash that is sent to the invited user by email. 
By clicking on the href link from invitation email, the user is redirected into CleverAnalytics application and after authentication is the invitation accepted.

When user accepts an invitation, he/she is added as a new Memeber of the Project in the role granted by the invitation.

#### Response statuses
* 200 - OK
* 400 - Bad request - invitation cannot be accepted (unexpected invitation state - already accepted, canceled)
* 403 - Forbidden - authenticated user email does not match email in invitation
* 404 - Not found - invitation was not found

#### Security
Restricted to invited user. Authenticated user email must equals to email in the invitation.

+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

        {
            "id": "qpewijr3sk",
            "email": "john.smith@cleveranalytics.com",
            "role": "VIEWER",
            "status": "ACCEPTED",
            "createdAt": 1415132126985,
            "modifiedAt": 1415137986911,
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/projects/ncesksvg7rjeri7v/invitation/jfjf0ak3kflam"
                },
                {
                    "rel": "project",
                    "href": "/rest/projects/ncesksvg7rjeri7v"
                },
                {
                    "rel": "createdBy",
                    "href": "/rest/accounts/O3kTMX6pCTRBSIMRej4q0"
                },
                {
                    "rel": "modifiedBy",
                    "href": "/rest/accounts/O3kTMX6pCTRBSIMRej4q0"
                }                
            ]
        }


# Group Search

## Search

### Search [GET /rest/projects/{projectId}/search{?query,dataset,size,page}] 

Full text search on all internal project data.
The search searvice indexes `title` and `subtitle` of all geometry datasets (`geometryPoint`, `geometryLine`, `geometryPolygon`).
The dataset's objects are indexed during dataset pull job. It means that if the `title` or `subtitle` definition is changed in dataset's metadata definition, the affected dataset must be loaded again by dataset pull full load process.

+ Parameters 
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project
    + query: `Birmingham` (string) - Query search phrase. It is split into terms and the resource return dataset's object that contains all terms in their `title` or `subtitle`. 
    + dataset: `district` (optional, string[]) - Search only in given dataset. If the parameter present, only the search results of given datasets are returned.       Parameter can be repeated, e.g. `&dataset=orders&dataset=customers`
    + size = `20` (optional, number)
    + page = `0` (optional, number)
    
+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

       + Body
    
            {
                "content": [
                    {
                        "id": "E01031244",
                        "dataset": "lsoa_demo_uk",
                        "title": "Stratford-on-Avon 001C",
                        "subtitle": "",
                        "highlight": {
                            "title": "Stratford-on-<em>A</em>von 001C"
                        }
                    },
                    {
                        "id": "2",
                        "dataset": "shops",
                        "title": "My Store:  Alum Rock Road",
                        "subtitle": "adress: STREET & Houzse No., City....to be completed",
                        "highlight": {
                            "title": "My Store:  <em>A</em>lum Rock Road",
                            "subtitle": "<em>a</em>dress: STREET & Houzse No., City....to be completed"
                        }
                    }
                ],
                "links": [
                    {
                        "rel": "self",
                        "href": "/rest/projects/m6pqozml0ckkijzf/search?query=a&size=2&page=0"
                    },
                    {
                        "rel": "next",
                        "href": "/rest/projects/m6pqozml0ckkijzf/search?query=a&size=2&page=1"
                    }
                ],
                "page": {
                    "size": 2,
                    "totalElements": 18,
                    "totalPages": 9,
                    "number": 0
                }
            }
            
### Geographic Search [GET /rest/projects/{projectId}/geosearch{?query,size,page}]

Full text search for a location identified by the `query` parameter.

+ Parameters
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project
    + query: `Birmingham` (string) - Query search phrase
    + size = `20` (optional, number)
    + page = `0` (optional, number)

+ Request (application/json)

    + Headers

            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

    + Body

            {
                "content": [
                    {
                        "title": "Birmingham",
                        "subtitle": "West Midlands Combined Authority",
                        "position": {
                            "lat": 52.4949,
                            "lng": -1.852658
                        },
                        "highlight": {
                            "title": "<em>Birmingham</em>",
                            "subtitle": "West Midlands Combined Authority"
                        },
                        "boundingBox": {
                            "upperLeft": {
                                "lat": 52.327674,
                                "lng": -2.045202
                            }
                            "lowerRight": {
                                "lat": 52.570615,
                                "lng": -1.597742
                            }
                        },
                        "placeType": "city"
                    },
                    {
                        "title": "Birmingham New Road",
                        "subtitle": "Dudley",
                        "position": {
                            "lat": 52.533226,
                            "lng": -2.08706
                        },
                        "highlight": {
                            "title": "<em>Birmingham</em> New Road",
                            "subtitle": "Dudley",
                        },
                        "placeType": "street"
                    },
                    {
                        "title": "New Frankley in Birmingham",
                        "subtitle": "Birmingham",
                        "position": {
                            "lat": 52.405514,
                            "lng": -2.016126
                        },
                        "highlight": {
                            "title": "New Frankley in <em>Birmingham</em>",
                            "subtitle": "<em>Birmingham</em>",
                        },
                        "placeType": "place"
                    }
                ],
                "links": [
                    {
                        "rel": "self",
                        "href": "/rest/projects/vb2b3d8v91jao331/geosearch?query=Birmingham"
                    },
                    {
                        "rel": "next",
                        "href": "/rest/projects/vb2b3d8v91jao331/geosearch?query=Birmingham&size=10&page=1"
                    }
                ],
                "page": {
                    "size": 10,
                    "totalElements": 1,
                    "totalPages": 1,
                    "number": 0
                }
            }


# Group Data Warehouse Service
## DWH Query [/rest/projects/{projectId}/dwh/query{?size,page}]
### Run Query [POST] 
Executes a multidimensional query on datawarehouse. 
Thanks to the query language you are just defining which properities do you want to get 
and you do not case about how get the data. 
The querying properties can be from any datasets (if there is some connection between datasets).

Query service applies a GROUP BY operation on all properties that are NOT aggregated.
In the example bellow the query in SQL syntax would look like: 

```sql
SELECT
    baskets.value_name,
    sum(baskets.amount)
FROM
    baskets
    JOIN dim_dates ON dim_dates.date_iso = baskets.date_iso
WHERE
    dim_dates.date_iso > "2017-09-24"
    AND dim_dates.date_iso < "2017-09-30"
    AND baskets.amount > 5
    AND baskets.amount < 898.17
GROUP BY
    baskets.value_name
```

List of supported aggregation function:
* function_avg
* function_sum
* function_count
* function_count_dist
* function_max
* function_min
* function_stddev_samp
* function_stddev_pop
* function_var_samp
* function_var_pop

List of supported window functions:
* function_ntile
* function_rank
* function_percentile

List of supported arithmetic functions:
* function_plus
* function_minus
* function_multiply
* function_divide
* function_modulo

List of supported conditional functions:
* ifnull - define the default value to use if the result of aggregation function is null

The WHERE cause of statement is represent by *filterBy* array. The results must match ALL of filters, there is an AND condition between them.
These functions can be used for comparing property with a value: 
* eq
* in
* ne
* lt
* lte
* gt
* gte
* isNull
* isNotNull
* inAttribute

Boolean operators for building advanced conditions:
* and - requires at least two arguments (subconditions)
* or - requires at least two arguments (subconditions)
* not - requires just one argument


#### Response statuses
* 200 - OK - query was successfully executed

+ Parameters 
    + projectId: `vb2b3d8v91jao331` (string) The ID of an actual project
    + size (optional, number) - The count of records to return for one page
        + Default: `20`
    + page (optional, number) - Number of the page
        + Default: `0`

+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}

    + Body
        
            {
                "properties": [
                    {
                        "id": "_split_property",
                        "type": "property",
                        "value": "baskets.value_name"
                    },
                    {
                        "id": "turnover_metric",
                        "type": "function_sum",
                        "content": [
                            {
                                "type": "property",
                                "value": "baskets.amount"
                            }
                        ]
                    }
                ],
                "filterBy": [
                    {
                        "property": "dim_dates.date_iso",
                        "operator": "gte",
                        "value": "2017-09-24"
                    },
                    {
                        "property": "dim_dates.date_iso",
                        "operator": "lte",
                        "value": "2017-09-30"
                    },
                    {
                        "property": "baskets.amount",
                        "operator": "gte",
                        "value": 5
                    },
                    {
                        "property": "baskets.amount",
                        "operator": "lte",
                        "value": 898.17
                    }
                ],
                "having": [],
                "orderBy": [
                    {
                        "property": "baskets.value_cat",
                        "direction": "asc",
                        "sort": "asc"
                    }
                ]
            }

+ Response 200 (application/json)

            {
                "links": [
                    {
                        "rel": "self",
                        "href": "/rest/projects/kt3hz932v53vabh8/dwh/query?page=0&size=200&sort=null"
                    }
                ],
                "content": [
                    {
                        "content": {
                            "_split_property": "Up to £ 20",
                            "turnover_metric": 3103.23
                        },
                        "links": []
                    },
                    {
                        "content": {
                            "_split_property": "£ 20 - 50",
                            "turnover_metric": 30531.54
                        },
                        "links": []
                    },
                    {
                        "content": {
                            "_split_property": "£ 50 - 100",
                            "turnover_metric": 109640.42
                        },
                        "links": []
                    },
                    {
                        "content": {
                            "_split_property": "£ 100 - 250",
                            "turnover_metric": 109927.28
                        },
                        "links": []
                    },
                    {
                        "content": {
                            "_split_property": "£ more than 250",
                            "turnover_metric": 99700.79
                        },
                        "links": []
                    }
                ],
                "page": {
                    "size": 200,
                    "totalElements": 5,
                    "totalPages": 1,
                    "number": 0
                }
            }

### Explain Query [POST /rest/projects/{projectId}/dwh/explain] 
This resource is useful for debugging and tuning DWH queries. 
The resource accept standard DWH Query and shows the corresponding SQL statement.

* 200 - OK - query was successfully executed

+ Parameters 
    + projectId: `vb2b3d8v91jao331` (string) The ID of an actual project

+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}

    + Body
            
            {
                "properties": [
                    {
                        "id": "_split_property",
                        "type": "property",
                        "value": "baskets.value_name"
                    },
                    {
                        "id": "turnover_metric",
                        "type": "function_sum",
                        "content": [
                            {
                                "type": "property",
                                "value": "baskets.amount"
                            }
                        ]
                    }
                ],
                "filterBy": [
                    {
                        "property": "dim_dates.date_iso",
                        "operator": "gte",
                        "value": "2017-09-24"
                    },
                    {
                        "property": "dim_dates.date_iso",
                        "operator": "lte",
                        "value": "2017-09-30"
                    },
                    {
                        "property": "baskets.amount",
                        "operator": "gte",
                        "value": 5
                    },
                    {
                        "property": "baskets.amount",
                        "operator": "lte",
                        "value": 898.17
                    }
                ],
                "having": [],
                "orderBy": [
                    {
                        "property": "baskets.value_cat",
                        "direction": "asc",
                        "sort": "asc"
                    }
                ]
            }
        
+ Response 200 (text/plain)

        select 
          "_split_property", 
          "turnover_metric", 
          count(*) over () as "total_rows_count"
        from (
          with "turnover_metric" as (
            select 
              "baskets"."value_name" as "_split_property", 
              "baskets"."value_cat" as "sort_value_cat_0", 
              sum("baskets"."amount") as "turnover_metric"
            from "baskets"
              join "dim_dates"
              on "baskets"."date_iso" = "dim_dates"."date_iso"
            where (
              "dim_dates"."date_iso" >= 2017-09-24
              and "dim_dates"."date_iso" <= 2017-09-30
              and "baskets"."amount" >= 5
              and "baskets"."amount" <= 898.17
            )
            group by 
              "baskets"."value_cat", 
              "baskets"."value_name"
            order by 
              "_split_property" asc, 
              "sort_value_cat_0" asc
          )
          select 
            coalesce("turnover_metric"."_split_property") as "_split_property", 
            coalesce("turnover_metric"."sort_value_cat_0") as "sort_value_cat_0", 
            "turnover_metric" as "turnover_metric"
          from "turnover_metric"
          group by 
            1, 
            2, 
            "turnover_metric"
          order by "sort_value_cat_0" asc
        ) as "inner"
        limit 200


## DWH Metric Range [/rest/projects/{projectId}/dwh/metricRange]
### Metric Range Values [POST] 
Executes a multidimensional query and returns the range values for all given metrics.
The range values depends on a granularity  - that is defined by query properties.

The resource returns for each metrics:
* *min* - minimal value for metric in given scope
* *max* - maximal value for metric in given scope

Following example returns the `min` and `max` of *stores_count* and *turnover* from all states. The customers with `turnover < 1000` are not calculated.

+ Parameters
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project


+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}

    + Body
        
            {
                "properties": [
                    {
                        "id": "districtcode",
                        "type": "property",
                        "value": "district.districtcode"
                    },
                    {
                        "id": "turnover_metric",
                        "type": "function_sum",
                        "content": [
                            {
                                "type": "property",
                                "value": "baskets.amount"
                            }
                        ]
                    }
                ],
                "filterBy": [
                    {
                        "property": "dim_dates.date_iso",
                        "operator": "gte",
                        "value": "2017-09-24"
                    },
                    {
                        "property": "dim_dates.date_iso",
                        "operator": "lte",
                        "value": "2017-09-30"
                    },
                    {
                        "property": "baskets.amount",
                        "operator": "gte",
                        "value": 5
                    },
                    {
                        "property": "baskets.amount",
                        "operator": "lte",
                        "value": 898.17
                    }
                ],
                "having": []
            }


+ Response 200 (application/json)

            {
                "content": [
                    {
                        "propertyId": "turnover_metric",
                        "min": 64.66,
                        "max": 203394.85
                    }
                ]
            }


## DWH Available Datasets [/rest/projects/{projectId}/dwh/availableDatasets{?subtype,expand}]
### Available Datasets [POST] 
List datasets available for drill in for given metric(s). 

The project's data model defines the relations among datasets. Not all metrics are computable at all datasets granularity.
E.g. population defined on State level cannot be calculated for granularity (dataset) city. 

This endpoint checks the relations from data model and lists only the available datasets for the metrics.

+ Parameters 
    + projectId: `vb2b3d8v91jao331` (string) The ID of an actual project
    + subtype (optional, string[]) available datasets of subtypes

        If the parameter present, only the datasets of given subtype(s) are returned.
        Parameter can be repeated, e.g. `?subtype=geometryLine&subtype=geometryPolygon`

        Supported types

        + Values
            + `geometryPoint`
            + `geometryLine`    
            + `geometryPolygon`
            
    + expand: `dataset` (enum[String], optional)
        Expand datasets to minimalize roundtrips.
        + Members
            + `dataset` - expand datasets
            

+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}

    + Body
        
            {
                "metrics": [
                    {
                        "id": "customers_metric",
                        "type": "function_count",
                        "content": [
                            {
                                "type": "property",
                                "value": "clients.client_id"
                            }
                        ]
                    }
                ]
            }        

+ Response 200 (application/json)

            {
                "content": [
                    {
                        "metricId": "customers_metric",
                        "availableDatasets": [
                            "/rest/projects/kt3hz932v53vabh8/md/datasets/raopcg3tfoen2po4"
                        ]
                    }
                ]
            }

## DWH Values Distribution [/rest/projects/{projectId}/dwh/valuesDistribution{?property,buckets,min,max}]

### Values Distribution [GET] 

Computes distribution (frequency) of given fact (numeric dataset property). Result is splitted into required 
number of equal size buckets. The frequency is the count of occurencies of given metric in these buckets.

+ Parameters 
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project
    + property: `baskets.amount` (required, string) - The name of a property
    + buckets: `3` (optional, number) - Number of buckets to split results into
        + Default: `20`
    + min (optional, number) - Set minimal value for distribution. By default it is a minimal value for the property.
    + max (optional, number) - Set maximal value for distribution. By default it is a maximal value for the property.

+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

        {
            "content": [
                 {
                    "min": 100,
                    "max": 200,
                    "content": [
                        {
                            "propertyId" : "turnover",
                            "frequency": 84
                        }
                    ]
                },
                {
                    "min": 200,
                    "max": 300,
                    "content": [
                        {
                            "propertyId" : "turnover",
                            "frequency": null
                        }
                    ]
                },
                {
                    "min": 300,
                    "max": 400,
                    "content": [
                        {
                            "propertyId" : "turnover",
                            "frequency": 12
                        }
                    ]
                }
            ]
        }



## DWH Metric Values Distribution [/rest/projects/{projectId}/dwh/metricValuesDistribution]
### Metric Values Distribution [POST] 
Executes a multidimensional query and returns the data distribution of given metric. The resource is typically used for preparing data for histogram chart.

#### Distribution methods
There are currently supported two distribution methods for counting number of elements.

Each method has a custom parameter in request body (see request examples bellow):

* `buckets` (int) - number of bucket for the dynamic splitting
* `breakpoints` (array<number>) - array of breakpoints for static segments

###### Dynamic buckets split
Metric range is splitted into required number of equal size buckets. The frequency is the count of occurencies of given metric in these buckets.
The range values depends on a granularity - that is defined by query properties.

###### Static breakpoints for segments
Executes a multidimensional query and returns the number of records in each segment. Segments are defined as static breakpoints of the metric distribution.
To the first segment are counted all regions whose value of metric is between `<breakpoint[0], breakpoint[1]>`.
The interval for second segment is `(breakpoint[1], breakpoint[2]>`.
And the last segment is `(breakpoint[last-1], breakpoint[last]>`.
The minimal required number of breakpoints is 2, it returns count of elements in one segment.


Returns:
* 200 - ok
* 400 - bad request 
    * 400006 - metric values distribution for given metric and filters is not supported. The min and max values equals and therefore cannot be splitted into buckets.

+ Parameters
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project


+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}

    + Body
            
            {
                "buckets": 20,
                "query": {
                    "properties": [
                        {
                            "id": "msoa11cd",
                            "type": "property",
                            "value": "msoa_demo_uk.msoa11cd"
                        },
                        {
                            "id": "purchases_customer_metric",
                            "type": "function_divide",
                            "content": [
                                {
                                    "type": "function_count",
                                    "content": [
                                        {
                                            "type": "property",
                                            "value": "baskets.basket_id"
                                        }
                                    ],
                                    "options": {
                                        "aggregateBy": [],
                                        "withoutFilters": [],
                                        "acceptFilters": [],
                                        "filterBy": []
                                    }
                                },
                                {
                                    "type": "function_count",
                                    "content": [
                                        {
                                            "type": "property",
                                            "value": "clients.client_id"
                                        }
                                    ],
                                    "options": {
                                        "aggregateBy": [],
                                        "withoutFilters": [],
                                        "acceptFilters": [],
                                        "filterBy": []
                                    }
                                }
                            ]
                        }
                    ],
                    "filterBy": [
                        {
                            "property": "shops.shop_id",
                            "value": [
                                "9"
                            ],
                            "operator": "in"
                        },
                        {
                            "property": "dim_dates.date_iso",
                            "operator": "gte",
                            "value": "2017-09-05"
                        },
                        {
                            "property": "dim_dates.date_iso",
                            "operator": "lte",
                            "value": "2017-09-21"
                        },
                        {
                            "property": "baskets.amount",
                            "operator": "gte",
                            "value": 5
                        },
                        {
                            "property": "baskets.amount",
                            "operator": "lte",
                            "value": 898.17
                        }
                    ]
                }
            }


+ Response 200 (application/json)

            {
                "content": [
                    {
                        "min": 1,
                        "max": 1.005,
                        "content": [
                            {
                                "propertyId": "purchases_customer_metric",
                                "frequency": 12
                            }
                        ]
                    },
                    {
                        "min": 1.005,
                        "max": 1.01,
                        "content": [
                            {
                                "propertyId": "purchases_customer_metric",
                                "frequency": 0
                            }
                        ]
                    },
                    {
                        "min": 1.01,
                        "max": 1.015,
                        "content": [
                            {
                                "propertyId": "purchases_customer_metric",
                                "frequency": 0
                            }
                        ]
                    },
                    {
                        "min": 1.015,
                        "max": 1.02,
                        "content": [
                            {
                                "propertyId": "purchases_customer_metric",
                                "frequency": 0
                            }
                        ]
                    },
                    {
                        "min": 1.02,
                        "max": 1.025,
                        "content": [
                            {
                                "propertyId": "purchases_customer_metric",
                                "frequency": 0
                            }
                        ]
                    },
                    {
                        "min": 1.025,
                        "max": 1.03,
                        "content": [
                            {
                                "propertyId": "purchases_customer_metric",
                                "frequency": 0
                            }
                        ]
                    },
                    {
                        "min": 1.03,
                        "max": 1.035,
                        "content": [
                            {
                                "propertyId": "purchases_customer_metric",
                                "frequency": 0
                            }
                        ]
                    },
                    {
                        "min": 1.035,
                        "max": 1.04,
                        "content": [
                            {
                                "propertyId": "purchases_customer_metric",
                                "frequency": 1
                            }
                        ]
                    },
                    {
                        "min": 1.04,
                        "max": 1.045,
                        "content": [
                            {
                                "propertyId": "purchases_customer_metric",
                                "frequency": 0
                            }
                        ]
                    },
                    {
                        "min": 1.045,
                        "max": 1.05,
                        "content": [
                            {
                                "propertyId": "purchases_customer_metric",
                                "frequency": 0
                            }
                        ]
                    },
                    {
                        "min": 1.05,
                        "max": 1.055,
                        "content": [
                            {
                                "propertyId": "purchases_customer_metric",
                                "frequency": 0
                            }
                        ]
                    },
                    {
                        "min": 1.055,
                        "max": 1.06,
                        "content": [
                            {
                                "propertyId": "purchases_customer_metric",
                                "frequency": 0
                            }
                        ]
                    },
                    {
                        "min": 1.06,
                        "max": 1.065,
                        "content": [
                            {
                                "propertyId": "purchases_customer_metric",
                                "frequency": 2
                            }
                        ]
                    },
                    {
                        "min": 1.065,
                        "max": 1.07,
                        "content": [
                            {
                                "propertyId": "purchases_customer_metric",
                                "frequency": 2
                            }
                        ]
                    },
                    {
                        "min": 1.07,
                        "max": 1.075,
                        "content": [
                            {
                                "propertyId": "purchases_customer_metric",
                                "frequency": 0
                            }
                        ]
                    },
                    {
                        "min": 1.075,
                        "max": 1.08,
                        "content": [
                            {
                                "propertyId": "purchases_customer_metric",
                                "frequency": 2
                            }
                        ]
                    },
                    {
                        "min": 1.08,
                        "max": 1.085,
                        "content": [
                            {
                                "propertyId": "purchases_customer_metric",
                                "frequency": 0
                            }
                        ]
                    },
                    {
                        "min": 1.085,
                        "max": 1.09,
                        "content": [
                            {
                                "propertyId": "purchases_customer_metric",
                                "frequency": 0
                            }
                        ]
                    },
                    {
                        "min": 1.09,
                        "max": 1.095,
                        "content": [
                            {
                                "propertyId": "purchases_customer_metric",
                                "frequency": 0
                            }
                        ]
                    },
                    {
                        "min": 1.095,
                        "max": 1.1,
                        "content": [
                            {
                                "propertyId": "purchases_customer_metric",
                                "frequency": 1
                            }
                        ]
                    }
                ]
            }        
        

## Property Values [/rest/projects/{projectId}/dwh/values{?property,filter,size,page,direction,orderBy}]

### Get Property Values [GET]

Gets list of distinct values of given dataset's property. The property is set by mandatory parameter `property`. 
The distinct values are returned as pageable response.
By default, the values are ordered ascending by the property value. Optionaly the direction can be changed and the values can be sorted by another propety (eg. sort day of week by day id instead of day name).

+ Parameters 
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project
    + property: `baskets.courier` (required, string) - Name of the property
    + filter (optional, string)
    + size (optional, number) - The count of distinct values to get
        + Default: `200`
    + page (optional, number)
        + Default: `0`
    + direction (optional, enum[string])

        + Members:
            + `asc`
            + `desc`

    + orderBy (optional, string)
    
+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}
            Accept: application/json

+ Response 200 (application/json)

        {
            "content": [
                "Delivered",
                "Picked up"
            ],
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/projects/vb2b3d8v91jao331/dwh/values?property=baskets.courier&filter=&page=0&orderBy=baskets.courier&dir=asc"
                },
                {
                    "rel": "next",
                    "href": "/rest/projects/vb2b3d8v91jao331/dwh/values?property=baskets.courier&filter=&page=1&orderBy=baskets.courier&dir=asc"
                }
            ],
            "page": {
                "size": 200,
                "totalElements": 563,
                "totalPages": 3,
                "number": 0
            }
        }    


## DWH Upload [/rest/projects/{projectId}/dwh/data/uploads]
### Upload Data [POST] 
This resource allows to upload the data file (CSV) to internal storage. 

####Upload flow:
1. Create a new upload file by `POST /rest/projects/{projectId}/dwh/data/uploads`
1. Resource generates the new upload `uploadId` with a S3 pre-signed URL `uploadUrl`.
1. Upload the CSV file by `PUT {uploadUrl}` (no other authentication is required)

The pre-signed URL can be used by any HTTP tool. You can upload the content to the URL without any additional authorization (no bearer token needed).
Example of upload CSV file on signed URL by *curl*: 
```
curl -XPUT \
'https://s3-eu-west-1.amazonaws.com/can-dwh-upload-uploads-prod/00ubftx6v6TSTKnAt0h7/o3d2ov0p43msl3hf/RjFJt5kW302QNLzFIVnxN369dlY6KUw4?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJ6BXDNGJ7WFCT7SQ%2F20170915%2Feu-west-1%2Fs3%2Faws4_request&X-Amz-Date=20170915T141016Z&X-Amz-Expires=86400&X-Amz-SignedHeaders=host&X-Amz-Signature=e053197d044345041268b7f22918e2e71e2a3d5a23ceed65a332e1782998739c' \
-T /home/user/data/mydata.csv
```

#### Security
Restricted to *LOAD_DATA* or *ADMIN* project role that have permission to load data into the project

+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

        {
            "id": "8yQO2G6QPUNjgCdhCnmzgvVfZHXP6vQZ",
            "uploadUrl": "https://s3-eu-west-1.amazonaws.com/can-dwh-upload-uploads/B3mTX6pCTRBSIMRej4q0/ncesksvg7rjeri7v/8yQO2G6QPUNjgCdhCnmzgvVfZHXP6vQZ?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJ6BXDNGJ7AFCR7SQ/20171010/eu-west-1/s3/aws4_request&X-Amz-Date=20171010T101340Z&X-Amz-Expires=86400&X-Amz-SignedHeaders=host&X-Amz-Signature=c80416171ea6b9756c4a3b499cc9f34c5638e60d87f5e114cd23c0faec86265d",
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/accounts/B3mTX6pCTRBSIMRej4q0/uploads/ncesksvg7rjeri7v/8yQO2G6QPUNjgCdhCnmzgvVfZHXP6vQZ"
                },
                {
                    "rel": "project",
                    "href": "/rest/projects/ncesksvg7rjeri7v"
                }
            ]
        }
        

## DWH Pull [/rest/projects/{projectId}/dwh/data/pull]
### Pull Data into Dataset [POST] 
Resource for importing given data into data warehouse.
Data are being pulled from given *upload* to target *dataset*. There are supported two import modes:
* full - the existing data in current dataset are completely replace by given data
* incremental - the data from given *file* are added as new rows to existing data table

The parameter *type* specify a format of input data. List of supported data *type*s:
* csv


The *csvOptions* section is optional, default values are:
* header: true
* separator: ,
* quote: "
* escape: \\

Currently, this resource does not support asynchronous processing. This means that the size of loaded file is limited to 1 minute timeout.

#### Security
Restricted to *LOAD_DATA* or *ADMIN* project role that have permission to load data into the project

+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}

    + Body

            {
                "dataset": "mystores",
                "mode": "full",
                "upload": "/rest/accounts/B3mTX6pCTRBSIMRej4q0/uploads/ncesksvg7rjeri7v/test.csv",
                "type": "csv",
                "csvOptions": 
                    {
                        "header": true,
                        "separator": ",",
                        "quote": "\"",
                        "escape": "\\"
                    }
            }


+ Response 204 (application/json)

## DWH Dataset Dump [/rest/projects/{projectId}/dwh/data/dumps]
### Dump Dataset [POST] 
This resource allows to dump all data from given dataset into a file (CSV). 
The dump file is then stored on local storage and ready to download. 
The main purpose of this resource is allow to backup or migrate data from project on dataset granularity.

The request contains a list of dataset names to be dumped. All datasets dumped by the requests gets the same *dumpId*. 
TODO: implement a project lock to grant a consistency between datasets.

Currently, there is support only the CSV format of dumps.

#### Security
Restricted to *ADMIN* project role that have permission to dump data from the project

+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}

    + Body

            [
                { 
                  "dataset" : "mystores"
                },
                { 
                  "dataset" :"zones"
                }
            ]

+ Response 200 (application/json)

        {
          "content": [
            {
              "dataset": "mystores",
              "dumpId": "fsadf54a8ef421va5156fs",
              "fileLength": 1878,
              "links": [
                {
                  "rel": "self",
                  "href": "/rest/projects/ncesksvg7rjeri7v/dwh/data/dumps/fsadf54a8ef421va5156fs"
                }
              ]
            },
            {
              "dataset": "zones",
              "dumpId": "1460405219364",
              "fileLength": 1107237,
              "links": [
                {
                  "rel": "self",
                  "href": "/rest/projects/ncesksvg7rjeri7v/dwh/data/dumps/gnidn45isjmb651b1cb5"
                }
              ]
            }
          ],
          "links": [],
          "page": {
            "size": 2,
            "totalElements": 2,
            "totalPages": 1,
            "number": 0
          }
        }

## DWH Dataset Dump File [/rest/projects/{projectId}/dwh/data/dumps/{dumpId}]
### Get Dataset Dump File [GET] 
When the dump process is done, the *dumps* resource returns links for downloading the dumped files. The dumps are available for next 24 hour and then removed.

##### The output CSV file format is:
Comma separated format as defined by RFC 4180 with Header as a first line.

* HEADER - first line is a heacder
* DELIMITER ',' - cells are delimiter by comma

#### Security
Restricted to *ADMIN* project role that have permission to dump data from the project

+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}

+ Response 200 (text/csv)

## DWH Validations [/rest/projects/{projectId}/dwh/validations]
### Validate DWH [POST] 
Create new task to validate model and data intetagrity of datawarehouse. 

#### Types of validation
* modelValidator - validates DWH tables regards datasets metadata. Compares that the logical dataset model is synchronized with physical model of DWH DB tables.
* dataValidator - validate data integrity. Check that the primary keys are unique and the reference integrity of foreign keys.


#### Validation Errors

|violation type|validator|desctiption|
|----|----|----|
|missingTable|modelValidator|no table was found for dataset|
|missingPrimaryKeyColumn|modelValidator|declared primary key column was not found|
|notUniquePrimaryKey|dataValidator|primary key is not unique|
|missingColumn|modelValidator|column for property was not found in db table|
|misorderColumn|modelValidator|column position in table does not match the dataset property position|
|unexpectedColumn|modelValidator|column table is not defined in dataset metadata object|
|notMatchingDataTypeColumn|modelValidator|data type of column does not match dataset property type|
|mismatchingForeignKeyDataType|modelValidator|type of foreignKey does not match type of primary key of referenced dataset|
|violationReferenceIntegrity|dataValidator|reference integrity is violated between given datasets|
|validationError|dataValidator/modelValidator|general error when executing validation task|

#### Security
Restricted to *LOAD_DATA* or *ADMIN* project role that have permission to run validation tasks.

+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}

    + Body
        
            { 
                "modelValidator" : {
                },
                "dataValidator": {
                }
            }

+ Response 200 (application/json)

        {
            "violations": [
                {
                    "violationType": "missingTable",
                    "message": "Missing DWH database table=customer_tab for dataset=customers",
                    "parameters": {
                        {
                            "name": "table",
                            "value": "customer_tab"
                        },
                        {
                            "name": "dataset",
                            "value": "customers"
                        }
                    ]
                },
                {
                    "violationType": "violationReferenceIntegrity",
                    "message": "Reference integrity violation in foreign key table=customer_tab column=transaction_id of dataset=customers referencing dataset=transactions",
                    "parameters": [
                        {
                            "table": "customer_tab",
                            "column": "transaction_id",
                            "dataset": "customers",
                            "targetDataset": "transactions"
                            "name": "table",
                            "value": "customer_tab"
                        },
                        {
                            "name": "column",
                            "value": "transaction_id"
                        },
                        {
                            "name": "dataset",
                            "value": "customers"
                        },
                        {
                            "name": "targetDataset",
                            "value": "transactions"
                        }
                    ],
                    "dataSample": [73664, 84387, 848482]
                }
            ]
        }
        
        
# Group Jobs
## Jobs [/rest/jobs]

### Start new job [POST] 
Start execution of the new project task. The task are processed asynchronously and all jobs are added into a queue.

#### Supported job types
* dataPull - loads the CSV file to a dataset
* dataDump - dumps the dataset to a CSV file
* export - execute DWH query and export result as a CSV file
* validate - validate project

+ Request dataPull (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}

    + Body

            { 
                "type" : "dataPull",
                "projectId": "ncesksvg7rjeri7v", 
                "content": {
                    "dataset": "mystores",
                    "mode": "full",
                    "upload": "/rest/accounts/B3mTX6pCTRBSIMRej4q0/uploads/ncesksvg7rjeri7v/test.csv",
                    "type": "csv",
                    "csvOptions": {
                        "header": true,
                        "separator": ",",
                        "quote": "\"",
                        "escape": "\\"
                    }
                }
            }
        
+ Request dataDump (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}

    + Body
    
            { 
                "type" : "dataDump",
                "projectId": "ncesksvg7rjeri7v", 
                "content": {
                    "dataset": "mystores"
                }
            }        

+ Request export (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}

    + Body

            {  
               "type":"export",
               "projectId":"ncesksvg7rjeri7v",
               "content":{  
                  "filename":"customers-transactions",
                  "format":"csv",
                  "query":{  
                     "properties":[  
                        {  
                           "id":"zsj_d_id",
                           "type":"property",
                           "value":"transactions.zsj_d_id"
                        },
                        {  
                           "id":"stores_count",
                           "type":"function_count",
                           "content":[  
                              {  
                                 "type":"property",
                                 "value":"mystores.store_id"
                              }
                           ]
                        },
                        {  
                           "id":"cart_avg",
                           "type":"function_avg",
                           "content":[  
                              {  
                                 "type":"property",
                                 "value":"transactions.cart_value"
                              }
                           ]
                        }
                     ],
                     "filterBy":[  
                        {  
                           "property":"mycustomers.customer_value",
                           "value":1000,
                           "operator":"lt"
                        }
                     ]
                  },
                  "csvOptions":{  
                     "header":true,
                     "separator":",",
                     "quote":"\"",
                     "escape":"\\"
                  }
               }
            }        

+ Request validate (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}

    + Body
    
            {
              "type": "validate",
              "projectId": "ncesksvg7rjeri7v",
              "content": {
                "modelValidator": {},
                "dataValidator": {}
              }
            }        

+ Response 202 (application/json)

        {
            "id": "db00de52-5ac8-0dc8-43d8-1cc162605007",
            "type": "dataPull",
            "status": "RUNNING",
            "startDate": 1504597250927,
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/jobs/db00de52-5ac8-0dc8-43d8-1cc162605007?type=dataPull"
                }
            ]
        }


## Job Detail [/rest/jobs/{jobId}{?type}]
### Get job status [GET] 
Check current status of given job.

#### Job statuses
* RUNNING - job is just running or waiting in the queue
* SUCCEEDED - the job was successfully processed
* FAILED - execution of job fails
* TIMED_OUT - exectution timouted
* ABORTED - job execution was aborted

+ Parameters
    + type (required, string, `dataDump`)

+ Request dataPull
    + Parameters

        + type: dataPull

    + Headers
    
            Authorization: Bearer {{accessToken}}

        
+ Response 200 (application/json)

        {
            "id": "db00de52-5ac8-0dc8-43d8-1cc162605007",
            "type": "dataPull",
            "status": "SUCCEEDED",
            "startDate": "123434534",
            "endDate": "123439999",
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/jobs/db00de52-5ac8-0dc8-43d8-1cc162605007?type=dataPull"
                }
            ]
        }

+ Request dataDump
    + Parameters

        + type: dataDump

    + Headers
    
            Authorization: Bearer {{accessToken}}
        
+ Response 200 (application/json)

        {
            "id": "bcb5e92a-7f7b-4008-b363-c662dbebf804",
            "type": "dataDump",
            "status": "SUCCEEDED",
            "startDate": 1504597250927,
            "endDate": 1504597250927,
            "result": {
                "dumpId": "07sQaPuv82qhHIZyQ58MxsqGXpuhHwZp",
                "links": [
                    {
                        "rel": "self",
                        "href": "/rest/projects/ncesksvg7rjeri7v/dwh/data/dumps/07sQaPuv82qhHIZyQ58MxsqGXpuhHwZp"
                    }
                ],
                "dataset": "mystores",
                "fileLength": 928404
            },
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/jobs/bcb5e92a-7f7b-4008-b363-c662dbebf804?type=dataDump"
                }
            ]
        }

+ Request export
    + Parameters

        + type: export

   + Headers
    
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

        {
            "id": "db00de52-5ac8-0dc8-43d8-1cc162605007",
            "type": "export",
            "status": "SUCCEEDED",
            "startDate": 1504597250927,
            "endDate": 1504597250927,
            "result": {
                "exportResult": "/rest/projects/ncesksvg7rjeri7v/exports/kfjadofjasoifjasodfj",
                "md5": "rqwvzd646fafassdfas",
                "fileLength": 454666,
                "records": 11111
            },
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/jobs/db00de52-5ac8-0dc8-43d8-1cc162605007?type=export"
                }
            ]
        }
        
+ Request validate
    + Parameters

        + type: validate

    + Headers
    
            Authorization: Bearer {{accessToken}}
        
+ Response 200 (application/json)

        {
            "id": "2bc8236c-86c9-0f40-c2ba-ab846a63297d",
            "type": "validate",
            "status": "SUCCEEDED",
            "startDate": 1513770118258,
            "endDate": 1513770118258,
            "result": {
                "violations": [
                    {
                        "violationType": "unexpectedColumn",
                        "message": "Unexpected column=lat found in table=demografie_dwh of dataset=demografie_dwh. This column is not specified as property of the dataset.",
                        "parameters": {
                            "unexpectedColumn": "lat",
                            "dataset": "demografie_dwh"
                        },
                        "dataSample": []
                    },
                    {
                        "violationType": "notUniquePrimaryKey",
                        "message": "Primary key contains count=2 duplicate values. Column=id in table=objednavky_dwh of dataset=objednavky_dwh. Sample of duplicated values=[1004636449, 1005184185]",
                        "parameters": {
                            "totalDuplicities": 2,
                            "dataset": "orders_dwh"
                        },
                        "dataSample": [
                            "1004636449",
                            "1005184185"
                        ]
                    }
                ]
            },
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/jobs/2bc8236c-86c9-0f20-c2ba-ab846a63297d?type=validate"
                }
            ]
        }        


# Group Export
## Export Data [/rest/projects/{projectId}/export]
### Export Data by Query [POST] 
Resource exports a given query to requested format and allow to configure some output options.

Export output formats:
* xlsx (excel file)
* csv (comma-separated values file)

#### Specific Output Formats Options
Exporter allows to optionaly specify a additional output options for specific output format. Following structure shows the default options for CSV:

##### CSV Default Options

    "csvOptions": {
        "header": true,
        "separator": ",",
        "quote": "\"",
        "escape": "\\"
    }

##### Excel Default Options

    "xlsxOptions": {
        "autofilter": [
            {
                "propertyId": "cart_avg",
                "value": 300,
                "operator": "gte"
            }
        ]
    }
    
###### Autofilter Option
Enable the autofiltering for the first row in the exported Excel spreadsheet. 
The autofilter set the filter on given properties (columns) identified by propertyId and values specified in autofilter array.

+ Request (application/json)

    + Headers
    
            Authorization: Bearer {{accessToken}}

    + Body

            {
                "filename": "customers-transactions",
                "format": "csv",
                "query": {
                    "properties": [
                        {
                            "id": "zsj_d_id",
                            "type": "property",
                            "value": "transactions.zsj_d_id"
                        },
                        {
                            "id": "stores_count",
                            "type": "function_count",
                            "content": [{
                                "type": "property",
                                "value": "mystores.store_id"
                            }]
                        },
                        {
                            "id": "cart_avg",
                            "type": "function_avg",
                            "content": [{
                                "type": "property",
                                "value": "transactions.cart_value"
                            }]
                        }
                    ],
                    "filterBy": [
                        {
                            "property": "mycustomers.customer_value",
                            "value": 1000,
                            "operator": "lt"
                        }
                    ]
                },
                "csvOptions": {
                    "header": true,
                    "separator": ",",
                    "quote": "\"",
                    "escape": "\\"
                }
            }

+ Response 200 (text/csv)

        zsj_d_id, stores_count, cart_avg
        2387, 12, 452.3
        987, 5, 388.1
        1901, 3, 298


# Group Metadata
Metadata configure the user interface, the data model and the actual computations and analysis done in the project.  

Detailed description of all metadata resources can be found in the [developer documentation](https://clevermaps.atlassian.net/wiki/spaces/CDD/pages/120332073/Metadata+model).

## Dashboards [/rest/projects/{projectId}/md/dashboards]
Dashboard is an ordered list of Indicator and Indicator Drill pairs.

Detailed description in the [developer documentation](https://clevermaps.atlassian.net/wiki/spaces/CDD/pages/120336827/Dashboards).

### List Dashboards [GET /rest/projects/{projectId}/md/dashboards{?page,size,sort}]
Returns paged collection of all Dashboards in a project.

#### Response statuses
* 200 - OK

+ Parameters
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project
    + size (optional, number) - The count of records to return for one page
        + Default: `20`
    + page (optional, number) - Number of the page
        + Default: `0`
    + sort: `name,asc` (optional, string) - Name of the attribute to use for sorting the results, together with direction (`asc` or `desc`)

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

        {
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/projects/vb2b3d8v91jao331/md/dashboards?page=0&size=5&sort=id"
                }
            ],
            "content": [
                {
                    "id": "j13im1r3rbvs4tus",
                    "name": "penetration_dashboard",
                    "type": "dashboard",
                    "content": {
                        "indicators": [
                            {
                                "indicator": "/rest/projects/vb2b3d8v91jao331/md/indicators?name=orders_indicator",
                                "indicatorDrill": "/rest/projects/vb2b3d8v91jao331/md/indicatorDrills?name=orders_indicator_drill"
                            },
                            {
                                "indicator": "/rest/projects/vb2b3d8v91jao331/md/indicators?name=revenue_indicator",
                                "indicatorDrill": "/rest/projects/vb2b3d8v91jao331/md/indicatorDrills?name=revenue_indicator_drill"
                            },
                            {
                                "indicator": "/rest/projects/vb2b3d8v91jao331/md/indicators?name=customers_indicator",
                                "indicatorDrill": "/rest/projects/vb2b3d8v91jao331/md/indicatorDrills?name=customers_indicator_drill"
                            },
                            {
                                "indicator": "/rest/projects/vb2b3d8v91jao331/md/indicators?name=average_order_indicator",
                                "indicatorDrill": "/rest/projects/vb2b3d8v91jao331/md/indicatorDrills?name=average_order_indicator_drill"
                            },
                            {
                                "indicator": "/rest/projects/vb2b3d8v91jao331/md/indicators?name=orders_per_customer_indicator",
                                "indicatorDrill": "/rest/projects/vb2b3d8v91jao331/md/indicatorDrills?name=orders_per_customer_indicator_drill"
                            }
                        ]
                    },
                    "accessInfo": {
                        "createdAt": "2017-10-18T10:15:40Z"
                    },
                    "links": [
                        {
                            "rel": "self",
                            "href": "/rest/projects/ld3y3gtm7jt6z1fx/md/dashboards/j13im1r3rbvs4tus"
                        }
                    ]
                },
                {
                    "id": "m6snd88062msunu1",
                    "name": "potential_dashboard",
                    "type": "dashboard",
                    "content": {
                        "indicators": [
                            {
                                "indicator": "/rest/projects/vb2b3d8v91jao331/md/indicators?name=households_indicator",
                                "indicatorDrill": "/rest/projects/vb2b3d8v91jao331/md/indicatorDrills?name=households_indicator_drill"
                            },
                            {
                                "indicator": "/rest/projects/vb2b3d8v91jao331/md/indicators?name=customers_indicator",
                                "indicatorDrill": "/rest/projects/vb2b3d8v91jao331/md/indicatorDrills?name=customers_indicator_drill"
                            },
                            {
                                "indicator": "/rest/projects/vb2b3d8v91jao331/md/indicators?name=purchase_strenght_indicator",
                                "indicatorDrill": "/rest/projects/vb2b3d8v91jao331/md/indicatorDrills?name=purchase_strenght_indicator_drill"
                            },
                            {
                                "indicator": "/rest/projects/vb2b3d8v91jao331/md/indicators?name=households_penetration_indicator",
                                "indicatorDrill": "/rest/projects/vb2b3d8v91jao331/md/indicatorDrills?name=households_penetration_indicator_drill"
                            }
                        ]
                    },
                    "accessInfo": {
                        "createdAt": "2017-10-18T10:18:04Z"
                    },
                    "links": [
                        {
                            "rel": "self",
                            "href": "/rest/projects/vb2b3d8v91jao331/md/dashboards/m6snd88062msunu1"
                        }
                    ]
                }
            ],
            "page": {
                "size": 5,
                "totalElements": 2,
                "totalPages": 1,
                "number": 0
            }
        }


### Create Dashboard [POST]
Creates new Dashboard.

#### Security
Restricted to *EDITOR* project role that has the permission to update metadata of the project.

#### Response statuses
* 200 - OK - Dashboard was successfully created
* 400 - Bad Request - there are syntax errors or validation violations
* 409 - Conflict - Dashboard with the same name or id already exists

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer {{accessToken}}

    + Body

            {
                "name": "penetration_dashboard",
                "type": "dashboard",
                "content": {
                    "indicators": [
                        {
                            "indicator": "/rest/projects/$projectId/md/indicators?name=orders_indicator",
                            "indicatorDrill": "/rest/projects/$projectId/md/indicatorDrills?name=orders_indicator_drill"
                        },
                        {
                            "indicator": "/rest/projects/$projectId/md/indicators?name=revenue_indicator",
                            "indicatorDrill": "/rest/projects/$projectId/md/indicatorDrills?name=revenue_indicator_drill"
                        },
                        {
                            "indicator": "/rest/projects/$projectId/md/indicators?name=customers_indicator",
                            "indicatorDrill": "/rest/projects/$projectId/md/indicatorDrills?name=customers_indicator_drill"
                        },
                        {
                            "indicator": "/rest/projects/$projectId/md/indicators?name=average_order_indicator",
                            "indicatorDrill": "/rest/projects/$projectId/md/indicatorDrills?name=average_order_indicator_drill"
                        },
                        {
                            "indicator": "/rest/projects/$projectId/md/indicators?name=orders_per_customer_indicator",
                            "indicatorDrill": "/rest/projects/$projectId/md/indicatorDrills?name=orders_per_customer_indicator_drill"
                        }
                    ]
                }
            }

+ Response 200 (application/json)

            {
                "id": "j13im1r3rbvs4tus",
                "name": "penetration_dashboard",
                "type": "dashboard",
                "content": {
                    "indicators": [
                        {
                            "indicator": "/rest/projects/$projectId/md/indicators?name=orders_indicator",
                            "indicatorDrill": "/rest/projects/$projectId/md/indicatorDrills?name=orders_indicator_drill"
                        },
                        {
                            "indicator": "/rest/projects/$projectId/md/indicators?name=revenue_indicator",
                            "indicatorDrill": "/rest/projects/$projectId/md/indicatorDrills?name=revenue_indicator_drill"
                        },
                        {
                            "indicator": "/rest/projects/$projectId/md/indicators?name=customers_indicator",
                            "indicatorDrill": "/rest/projects/$projectId/md/indicatorDrills?name=customers_indicator_drill"
                        },
                        {
                            "indicator": "/rest/projects/$projectId/md/indicators?name=average_order_indicator",
                            "indicatorDrill": "/rest/projects/$projectId/md/indicatorDrills?name=average_order_indicator_drill"
                        },
                        {
                            "indicator": "/rest/projects/$projectId/md/indicators?name=orders_per_customer_indicator",
                            "indicatorDrill": "/rest/projects/$projectId/md/indicatorDrills?name=orders_per_customer_indicator_drill"
                        }
                    ]
                },
                "accessInfo": {
                    "createdAt": "2017-10-18T10:15:40Z"
                },
                "links": [
                    {
                        "rel": "self",
                        "href": "/rest/projects/ld3y3gtm7jt6z1fx/md/dashboards/j13im1r3rbvs4tus"
                    }
                ]
            }

### Get Dashboard by id [GET /rest/projects/{projectId}/md/dashboards/{id}]

Returns Dashboard identified by given *id*.

#### Response statuses
* 200 - OK
* 404 - Not Found

+ Parameters
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project
    + id: `naln8j15edsjq4d2` (string) - The id of a dashboard

+ Request

    + Headers

            Authorization: Bearer {{accessToken}}
            Accept: application/json

+ Response 200 (application/json)

        {
            "id": "naln8j15edsjq4d2",
            "name": "catchment_area_dashboard",
            "type": "dashboard",
            "content": {
                "indicators": [
                    {
                        "indicator": "/rest/projects/vb2b3d8v91jao331/md/indicators?name=turnover_indicator",
                        "indicatorDrill": "/rest/projects/vb2b3d8v91jao331/md/indicatorDrills?name=turnover_indicator_drill"
                    },
                    {
                        "indicator": "/rest/projects/vb2b3d8v91jao331/md/indicators?name=customers_indicator",
                        "indicatorDrill": "/rest/projects/vb2b3d8v91jao331/md/indicatorDrills?name=customers_indicator_drill"
                    },
                    {
                        "indicator": "/rest/projects/vb2b3d8v91jao331/md/indicators?name=purchases_customer_indicator",
                        "indicatorDrill": "/rest/projects/vb2b3d8v91jao331/md/indicatorDrills?name=purchases_customer_indicator_drill"
                    }
                ]
            },
            "accessInfo": {
                "createdAt": "2018-01-25T15:29:30Z"
            },
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/projects/vb2b3d8v91jao331/md/dashboards/naln8j15edsjq4d2"
                }
            ]
        }


### Get Dashboard by name [GET /rest/projects/{projectId}/md/dashboards{?name}]

Returns Dashboard identified by given *name*.

#### Response statuses
* 200 - OK
* 404 - Not Found

+ Parameters
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project
    + name: `catchment_area_dashboard` (string) - The code name of the dashboard

+ Request

    + Headers

            Authorization: Bearer {{accessToken}}
            Accept: application/json

+ Response 200 (application/json)

        {
            "id": "naln8j15edsjq4d2",
            "name": "catchment_area_dashboard",
            "type": "dashboard",
            "content": {
                "indicators": [
                    {
                        "indicator": "/rest/projects/vb2b3d8v91jao331/md/indicators?name=turnover_indicator",
                        "indicatorDrill": "/rest/projects/vb2b3d8v91jao331/md/indicatorDrills?name=turnover_indicator_drill"
                    },
                    {
                        "indicator": "/rest/projects/vb2b3d8v91jao331/md/indicators?name=customers_indicator",
                        "indicatorDrill": "/rest/projects/vb2b3d8v91jao331/md/indicatorDrills?name=customers_indicator_drill"
                    },
                    {
                        "indicator": "/rest/projects/vb2b3d8v91jao331/md/indicators?name=purchases_customer_indicator",
                        "indicatorDrill": "/rest/projects/vb2b3d8v91jao331/md/indicatorDrills?name=purchases_customer_indicator_drill"
                    }
                ]
            },
            "accessInfo": {
                "createdAt": "2018-01-25T15:29:30Z"
            },
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/projects/vb2b3d8v91jao331/md/dashboards/naln8j15edsjq4d2"
                }
            ]
        }


### Update Dashboard [PUT /rest/projects/{projectId}/md/dashboards/{id}]
Updates Dashboard with given *id*.

#### Security
Restricted to *EDITOR* project role that has the permission to update metadata of the project.

#### Response statuses
* 200 - OK - Dashboard was successfully updated
* 400 - Bad Request - there are syntax errors or validation violations
* 404 - Not Found - Dashboard with given id was not found
* 409 - Conflict - Dashboard with the same name or id already exists
* 412 - Precondition Failed - version provided in If-Match header is outdated
* 428 - Precondition Required - version was not provided in If-Match header

+ Request

    + Headers

            If-Match: "0"
            Content-Type: application/json
            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

### Delete Dashboard [DELETE /rest/projects/{projectId}/md/dashboards/{id}]
Deletes Dashboard with given *id*.

#### Security
Restricted to *EDITOR* project role that has the permission to delete metadata of the project.

#### Response statuses
* 204 - No Content - Dashboard was successfully deleted
* 404 - Not Found - Dashboard with given id was not found

+ Request

    + Headers

            Authorization: Bearer {{accessToken}}

+ Response 204


## Data Permissions [/rest/projects/{projectId}/md/dataPermissions]
Data permission object refines data access to specific users on the level of database rows. 

Detailed description in the [developer documentation](https://clevermaps.atlassian.net/wiki/spaces/CDD/pages/167280805/Data+permissions).


### List Data Permissions [GET /rest/projects/{projectId}/md/dataPermissions]
Returns paged collection of all Data Permissions of all users in a project.

#### Security
Restricted to *ADMIN* project role that has the permission to update data permissions of the project.

#### Response statuses
* 200 - OK

// remove comments to enable this endpoint in dredd
// + Parameters
//     + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project
//     + size (optional, number) - The count of records to return for one page
//         + Default: `20`
//     + page (optional, number) - Number of the page
//         + Default: `0`
//     + sort: `name,asc` (optional, string) - Name of the attribute to use for sorting the results, together with direction (`asc` or `desc`)

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

            {
                "links": [
                    {
                        "rel": "self",
                        "href": "/rest/projects/ld3y3gtm7jt6z1fx/md/dataPermissions?page=0&size=5&sort=id"
                    }
                ],
                "content": [
                    {
                        "id": "b4j3pm51i1hobqfo",
                        "name": "data_permission_1",
                        "type": "dataPermission",
                        "description": "Permission allowing to view only Blue and Yellow store types in Jihomoravský kraj.",
                        "content": {
                            "accountId": "00ubfu7fdyIoFKxXm0h7",
                            "filters": [
                                {
                                    "property": "region_dwh.name",
                                    "value": "Jihomoravský kraj",
                                    "operator": "eq"
                                },
                                {
                                    "property": "store_dwh.type",
                                    "value": [
                                        "blue",
                                        "yellow"
                                    ],
                                    "operator": "in"
                                }
                            ]
                        },
                        "accessInfo": {
                            "createdAt": "2017-10-18T12:57:34Z"
                        },
                        "links": [
                            {
                                "rel": "self",
                                "href": "/rest/projects/ld3y3gtm7jt6z1fx/md/dataPermissions/b4j3pm51i1hobqfo"
                            }
                        ]
                    },
                    {
                        "id": "eb7edn1s5ns54v8q",
                        "name": "data_permission_2",
                        "type": "dataPermission",
                        "description": "Permission allowing to view only stores in Kraj Vysočina.",
                        "content": {
                            "accountId": "00ubpo9fouIoSKxpX0h6",
                            "filters": [
                                {
                                    "property": "region_dwh.name",
                                    "value": "Kraj Vysočina",
                                    "operator": "eq"
                                }
                            ]
                        },
                        "accessInfo": {
                            "createdAt": "2017-10-18T13:00:58Z"
                        },
                        "links": [
                            {
                                "rel": "self",
                                "href": "/rest/projects/ld3y3gtm7jt6z1fx/md/dataPermissions/eb7edn1s5ns54v8q"
                            }
                        ]
                    }
                ],
                "page": {
                    "size": 5,
                    "totalElements": 2,
                    "totalPages": 1,
                    "number": 0
                }
            }


### Create Data Permission [POST]
Creates new Data Permission.

#### Security
Restricted to *ADMIN* project role that has the permission to update data permissions of the project.

#### Response statuses
* 200 - OK - Data Permission was successfully created
* 400 - Bad Request - there are syntax errors or validation violations
* 409 - Conflict - Data Permission with the same name or id already exists

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer {{accessToken}}

    + Body

            {
                "name": "data_permission_1",
                "type": "dataPermission",
                "description": "Permission allowing to view only Blue and Yellow store types in Jihomoravský kraj.",
                "content": {
                    "accountId": "00ubfu7fdyIoFKxXm0h7",
                    "filters": [
                        {
                            "property": "region_dwh.name",
                            "value": "Jihomoravský kraj",
                            "operator": "eq"
                        },
                        {
                            "property": "store_dwh.type",
                            "value": [
                                "blue",
                                "yellow"
                            ],
                            "operator": "in"
                        }
                    ]
                }
            }

+ Response 200 (application/json)

            {
                "id": "b4j3pm51i1hobqfo",
                "name": "data_permission_1",
                "type": "dataPermission",
                "description": "Permission allowing to view only Blue and Yellow store types in Jihomoravský kraj.",
                "content": {
                    "accountId": "00ubfu7fdyIoFKxXm0h7",
                    "filters": [
                        {
                            "property": "region_dwh.name",
                            "value": "Jihomoravský kraj",
                            "operator": "eq"
                        },
                        {
                            "property": "store_dwh.type",
                            "value": [
                                "blue",
                                "yellow"
                            ],
                            "operator": "in"
                        }
                    ]
                },
                "accessInfo": {
                    "createdAt": "2017-10-18T12:57:34Z"
                },
                "links": [
                    {
                        "rel": "self",
                        "href": "/rest/projects/ld3y3gtm7jt6z1fx/md/dataPermissions/b4j3pm51i1hobqfo"
                    }
                ]
            }

### Get Data Permission by id [GET /rest/projects/{projectId}/md/dataPermissions/{id}]
Returns Data Permission with given *id*.

#### Security
Restricted to *ADMIN* project role that has the permission to update data permissions of the project.

#### Response statuses
* 200 - OK
* 404 - Not Found

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

### Get Data Permission by accountId [GET /rest/projects/{projectId}/md/dataPermissions?accountId={accountId}]
Returns Data Permission object of a user with specified *accountId*. 

#### Security
* If the *accountId* provided in the URL is the same as the *accountId* of currently logged user, return the permission object (not restricted to *ADMIN* role as any user has to be able to get his own permission)
* If the *accountId* provided in the URL is different than the *accountId* of currently logged user, return the permission only if currently logged user has *ADMIN* role

#### Response statuses
* 200 - OK
* 403 - Forbidden

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)


### Update Data Permission [PUT /rest/projects/{projectId}/md/dataPermissions/{id}]
Updates Data Permission with given *id*.

#### Security
Restricted to *ADMIN* project role that has the permission to update data permissions of the project.

#### Response statuses
* 200 - OK - Data Permission was successfully updated
* 400 - Bad Request - there are syntax errors or validation violations
* 404 - Not Found - Data Permission with given id was not found
* 409 - Conflict - Data Permission with the same name or id already exists
* 412 - Precondition Failed - version provided in If-Match header is outdated
* 428 - Precondition Required - version was not provided in If-Match header

+ Request

    + Headers

            If-Match: "0"
            Content-Type: application/json
            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

### Delete Data Permission [DELETE /rest/projects/{projectId}/md/dataPermissions/{id}]
Deletes Data Permission with given *id*.

#### Security
Restricted to *ADMIN* project role that has the permission to update data permissions of the project.

#### Response statuses
* 204 - No Content - Data Permission was successfully deleted
* 404 - Not Found - Data Permission with given id was not found

+ Request

    + Headers

            Authorization: Bearer {{accessToken}}

+ Response 204



## Datasets [/rest/projects/{projectId}/md/datasets]
Datasets describe the data model of the project. They also define constraints and links between all database tables in the project.

Detailed description in the [developer documentation](https://clevermaps.atlassian.net/wiki/spaces/CDD/pages/120336529/Datasets).


### List Datasets [GET /rest/projects/{projectId}/md/datasets{?type,page,size,sort}] 
Returns paged collection of all Datasets in a project.

#### Response statuses
* 200 - OK

+ Parameters
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project
    + type (optional, enum[string]) - If specified, returns only collection of datasets of given type

        + Members
            + `dwh`
            + `vt`
            + `wfs`

    + size (optional, number) - The count of records to return for one page
        + Default: `20`
    + page (optional, number) - Number of the page
        + Default: `0`
    + sort: `name,asc` (optional, string) - Name of the attribute to use for sorting the results, together with direction (`asc` or `desc`)

+ Request

    + Headers
    
            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

        {
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/projects/vb2b3d8v91jao331/md/datasets?page=0&size=5&sort=id"
                }
            ],
            "content": [
                {
                    "id": "g2per4det10dta2r",
                    "name": "baskets",
                    "type": "dataset",
                    "title": "Baskets",
                    "origin": "https://secure.cleveranalytics.com/rest/projects/vb2b3d8v91jao331/md/datasets?name=baskets",
                    "properties": {},
                    "ref": {
                        "subtype": "basic",
                        "type": "dwh",
                        "table": "baskets",
                        "primaryKey": "basket_id",
                        "properties": [
                            {
                                "name": "amount",
                                "title": "Amount",
                                "column": "amount",
                                "type": "double"
                            },
                            {
                                "name": "on_off_name",
                                "title": "Channel (online/offline)",
                                "column": "on_off_name",
                                "type": "string"
                            },
                            {
                                "name": "value_name",
                                "title": "Item value name",
                                "column": "value_name",
                                "type": "string"
                            },
                            {
                                "name": "basket_id",
                                "title": "Basket ID",
                                "column": "basket_id",
                                "type": "integer"
                            }
                        ]
                    },
                    "accessInfo": {
                        "createdAt": "2017-10-17T13:28:48Z"
                    },
                    "links": [
                        {
                            "rel": "self",
                            "href": "/rest/projects/vb2b3d8v91jao331/md/datasets/g2per4det10dta2r"
                        }
                    ]
                },
                {
                    "id": "hb8ugmblksj0p0go",
                    "name": "clients",
                    "type": "dataset",
                    "title": "Clients",
                    "origin": "https://secure.cleveranalytics.com/rest/projects/vb2b3d8v91jao331/md/datasets?name=clients",
                    "properties": {
                        "featureTitle": {
                            "type": "property",
                            "value": "client_id"
                        }
                    },
                    "ref": {
                        "subtype": "basic",
                        "type": "dwh",
                        "table": "clients",
                        "primaryKey": "client_id",
                        "properties": [
                            {
                                "name": "client_id",
                                "title": "Client ID",
                                "column": "client_id",
                                "type": "integer"
                            },
                            {
                                "name": "postcode",
                                "title": "postcode",
                                "column": "postcode",
                                "type": "string"
                            }
                        ]
                    },
                    "accessInfo": {
                        "createdAt": "2017-10-17T14:21:43Z"
                    },
                    "links": [
                        {
                            "rel": "self",
                            "href": "/rest/projects/vb2b3d8v91jao331/md/datasets/hb8ugmblksj0p0go"
                        }
                    ]
                }
            ],
            "page": {
                "size": 5,
                "totalElements": 2,
                "totalPages": 1,
                "number": 0
            }
        }


### Get Dataset by id [GET /rest/projects/{projectId}/md/datasets/{id}]
Returns Dataset with given *id*.

#### Response statuses
* 200 - OK
* 404 - Not Found

+ Parameters
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project
    + id: `n2ma1svl5o5oihrc` (string) - Id of the dataset

+ Request

    + Headers
    
            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

        {
            "id": "n2ma1svl5o5oihrc",
            "name": "baskets",
            "type": "dataset",
            "title": "Baskets",
            "origin": "https://secure.cleveranalytics.com/rest/projects/yufqzxkbiecj7jot/md/datasets?name=baskets",
            "properties": {
                "featureTitle": {
                    "type": "property",
                    "value": "basket_id"
                },
                "featureAttributes": []
            },
            "ref": {
                "subtype": "basic",
                "type": "dwh",
                "table": "baskets",
                "primaryKey": "basket_id",
                "properties": [
                    {
                        "filterable": true,
                        "name": "date_iso",
                        "title": "Date ISO",
                        "column": "date_iso",
                        "type": "string",
                        "foreignKey": "dim_dates"
                    },
                    {
                        "filterable": true,
                        "name": "shop_id",
                        "title": "Shop ID",
                        "column": "shop_id",
                        "type": "integer",
                        "foreignKey": "shops"
                    },
                    {
                        "filterable": true,
                        "name": "client_id",
                        "title": "Client ID",
                        "column": "client_id",
                        "type": "integer",
                        "foreignKey": "clients"
                    },
                    {
                        "filterable": true,
                        "name": "amount",
                        "title": "Purchase value",
                        "column": "amount",
                        "type": "double"
                    },
                    {
                        "filterable": true,
                        "name": "month",
                        "title": "Month",
                        "column": "month",
                        "type": "integer"
                    },
                    {
                        "filterable": true,
                        "name": "on_off_name",
                        "title": "Channel",
                        "column": "on_off_name",
                        "type": "string"
                    },
                    {
                        "filterable": true,
                        "name": "action_turnover",
                        "title": "Action turnover",
                        "column": "action_turnover",
                        "type": "double"
                    },
                    {
                        "filterable": true,
                        "name": "courier",
                        "title": "Delivery type",
                        "column": "courier",
                        "type": "string"
                    },
                    {
                        "filterable": true,
                        "name": "value_cat",
                        "title": "Item value category",
                        "column": "value_cat",
                        "type": "integer"
                    },
                    {
                        "filterable": true,
                        "name": "value_name",
                        "title": "Item value name",
                        "column": "value_name",
                        "type": "string"
                    },
                    {
                        "filterable": true,
                        "name": "basket_id",
                        "title": "Basket ID",
                        "column": "basket_id",
                        "type": "integer"
                    }
                ]
            },
            "accessInfo": {
                "createdAt": "2018-01-25T15:30:05Z"
            },
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/projects/vb2b3d8v91jao331/md/datasets/n2ma1svl5o5oihrc"
                }
            ]
        }

### Get Dataset by name [GET /rest/projects/{projectId}/md/datasets{?name}]
Returns Dataset with given *name*.

#### Response statuses
* 200 - OK
* 404 - Not Found

+ Parameters
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project
    + name: `baskets` (string) - Name of the dataset


+ Request

    + Headers
    
            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

        {
            "id": "n2ma1svl5o5oihrc",
            "name": "baskets",
            "type": "dataset",
            "title": "Baskets",
            "origin": "https://secure.cleveranalytics.com/rest/projects/yufqzxkbiecj7jot/md/datasets?name=baskets",
            "properties": {
                "featureTitle": {
                    "type": "property",
                    "value": "basket_id"
                },
                "featureAttributes": []
            },
            "ref": {
                "subtype": "basic",
                "type": "dwh",
                "table": "baskets",
                "primaryKey": "basket_id",
                "properties": [
                    {
                        "filterable": true,
                        "name": "date_iso",
                        "title": "Date ISO",
                        "column": "date_iso",
                        "type": "string",
                        "foreignKey": "dim_dates"
                    },
                    {
                        "filterable": true,
                        "name": "shop_id",
                        "title": "Shop ID",
                        "column": "shop_id",
                        "type": "integer",
                        "foreignKey": "shops"
                    },
                    {
                        "filterable": true,
                        "name": "client_id",
                        "title": "Client ID",
                        "column": "client_id",
                        "type": "integer",
                        "foreignKey": "clients"
                    },
                    {
                        "filterable": true,
                        "name": "amount",
                        "title": "Purchase value",
                        "column": "amount",
                        "type": "double"
                    },
                    {
                        "filterable": true,
                        "name": "month",
                        "title": "Month",
                        "column": "month",
                        "type": "integer"
                    },
                    {
                        "filterable": true,
                        "name": "on_off_name",
                        "title": "Channel",
                        "column": "on_off_name",
                        "type": "string"
                    },
                    {
                        "filterable": true,
                        "name": "action_turnover",
                        "title": "Action turnover",
                        "column": "action_turnover",
                        "type": "double"
                    },
                    {
                        "filterable": true,
                        "name": "courier",
                        "title": "Delivery type",
                        "column": "courier",
                        "type": "string"
                    },
                    {
                        "filterable": true,
                        "name": "value_cat",
                        "title": "Item value category",
                        "column": "value_cat",
                        "type": "integer"
                    },
                    {
                        "filterable": true,
                        "name": "value_name",
                        "title": "Item value name",
                        "column": "value_name",
                        "type": "string"
                    },
                    {
                        "filterable": true,
                        "name": "basket_id",
                        "title": "Basket ID",
                        "column": "basket_id",
                        "type": "integer"
                    }
                ]
            },
            "accessInfo": {
                "createdAt": "2018-01-25T15:30:05Z"
            },
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/projects/vb2b3d8v91jao331/md/datasets/n2ma1svl5o5oihrc"
                }
            ]
        }
   

### Create Dataset [POST]
Creates new Dataset.

#### Security
Restricted to *EDITOR* project role that has the permission to update metadata of the project.

#### Response statuses
* 200 - OK - Dataset was successfully created
* 400 - Bad Request - there are syntax errors or validation violations
* 409 - Conflict - Dataset with the same name or id already exists

+ Request (application/json)

    + Headers
    
            Accept: application/json
            Authorization: Bearer {{accessToken}}

    + Body

            {
                "name": "baskets",
                "type": "dataset",
                "title": "Baskets",
                "origin": "https://secure.cleveranalytics.com/rest/projects/yufqzxkbiecj7jot/md/datasets?name=baskets",
                "ref": {
                    "type": "dwh",
                    "subtype": "basic",
                    "table": "baskets",
                    "primaryKey": "basket_id",
                    "properties": [
                        {
                            "foreignKey": "dim_dates",
                            "name": "date_iso",
                            "title": "Date ISO",
                            "column": "date_iso",
                            "type": "string"
                        },
                        {
                            "foreignKey": "shops",
                            "name": "shop_id",
                            "title": "Shop ID",
                            "column": "shop_id",
                            "type": "integer"
                        },
                        {
                            "foreignKey": "clients",
                            "name": "client_id",
                            "title": "Client ID",
                            "column": "client_id",
                            "type": "integer"
                        },
                        {
                            "name": "amount",
                            "title": "Amount",
                            "column": "amount",
                            "type": "double"
                        },
                        {
                            "name": "on_off_name",
                            "title": "Channel (online/offline)",
                            "column": "on_off_name",
                            "type": "string"
                        },
                        {
                            "name": "value_name",
                            "title": "Item value name",
                            "column": "value_name",
                            "type": "string"
                        },
                        {
                            "name": "basket_id",
                            "title": "Basket ID",
                            "column": "basket_id",
                            "type": "integer"
                        }
                    ]
                }
            }

+ Response 200 (application/json)

        {
            "id": "g2per4det10dta2r",
            "name": "baskets",
            "type": "dataset",
            "title": "Baskets",
            "origin": "https://secure.cleveranalytics.com/rest/projects/yufqzxkbiecj7jot/md/datasets?name=baskets",
            "ref": {
                "subtype": "basic",
                "type": "dwh",
                "table": "baskets",
                "primaryKey": "basket_id",
                "properties": [
                    {
                        "foreignKey": "dim_dates",
                        "name": "date_iso",
                        "title": "Date ISO",
                        "column": "date_iso",
                        "type": "string"
                    },
                    {
                        "foreignKey": "shops",
                        "name": "shop_id",
                        "title": "Shop ID",
                        "column": "shop_id",
                        "type": "integer"
                    },
                    {
                        "foreignKey": "clients",
                        "name": "client_id",
                        "title": "Client ID",
                        "column": "client_id",
                        "type": "integer"
                    },
                    {
                        "name": "amount",
                        "title": "Amount",
                        "column": "amount",
                        "type": "double"
                    },
                    {
                        "name": "on_off_name",
                        "title": "Channel (online/offline)",
                        "column": "on_off_name",
                        "type": "string"
                    },
                    {
                        "name": "value_name",
                        "title": "Item value name",
                        "column": "value_name",
                        "type": "string"
                    },
                    {
                        "name": "basket_id",
                        "title": "Basket ID",
                        "column": "basket_id",
                        "type": "integer"
                    }
                ]
            },
            "accessInfo": {
                "createdAt": "2017-10-17T13:28:48Z"
            },
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/projects/yufqzxkbiecj7jot/md/datasets/g2per4det10dta2r"
                }
            ]
        }

        
### Update Dataset [PUT /rest/projects/{projectId}/md/datasets/{id}]
Updates Dataset with given *id*.

#### Security
Restricted to *EDITOR* project role that has the permission to update metadata of the project.

#### Response statuses
* 200 - OK - Dataset was successfully updated
* 400 - Bad Request - there are syntax errors or validation violations
* 404 - Not Found - Dataset with given id was not found
* 409 - Conflict - Dataset with the same name or id already exists
* 412 - Precondition Failed - version provided in If-Match header is outdated
* 428 - Precondition Required - version was not provided in If-Match header

+ Request

    + Headers
    
            If-Match: "0"
            Content-Type: application/json
            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

### Delete Dataset [DELETE /rest/projects/{projectId}/md/datasets/{id}]
Deletes Dataset with given *id*.

#### Security
Restricted to *EDITOR* project role that has the permission to delete metadata of the project.

#### Response statuses
* 204 - No Content - Dataset was successfully deleted
* 404 - Not Found - Dataset with given id was not found

+ Request

    + Headers
    
            Authorization: Bearer {{accessToken}}
            
+ Response 204

## Dataset Properties List [/rest/projects/{projectId}/md/datasetProperties]
This read-only resource contains all own properties of a Dataset, as well as all DWH properties linked through Dataset's foreign key properties.
It is used to create a list of available filters, sorted into categories.

### Get Dataset Properties List [GET /rest/projects/{projectId}/md/datasetProperties{?dataset,properties,page,size,sort}] 
Returns a list of all DWH properties of given *dataset*.

#### Response statuses
* 200 - OK
* 400 - Bad Request - there is a syntax error in some of the request parameters
* 404 - Not Found - Dataset with given name was not found

+ Parameters 
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project
    + dataset (optional, string) - return properties of that dataset
    + properties (enum[String], optional)
        Specifies if only properties marked as filterable, or all properties should be included.
        + Members
            + `all` - return all properties
            + `filterable` - returns only properties marked as filterable
    + size (optional, number) - The count of records to return for one page
        + Default: `20`
    + page (optional, number) - Number of the page
        + Default: `0`
    + sort: `name,asc` (optional, string) - Name of the attribute to use for sorting the results, together with direction (`asc` or `desc`)


+ Request Fetching properties of a single dataset

    + Headers
    
            Accept: application/json
            Authorization: Bearer {{accessToken}}
            
    + Parameters

        + dataset: `baskets`

+ Response 200 (application/json)

        {
            "dataset": "baskets",
            "listedProperties": "all",
            "ownProperties": [
                {
                    "filterable": true,
                    "name": "date_iso",
                    "title": "Date ISO",
                    "column": "date_iso",
                    "type": "string",
                    "foreignKey": "dim_dates"
                },
                {
                    "filterable": true,
                    "name": "shop_id",
                    "title": "Shop ID",
                    "column": "shop_id",
                    "type": "integer",
                    "foreignKey": "shops"
                },
                {
                    "filterable": true,
                    "name": "client_id",
                    "title": "Client ID",
                    "column": "client_id",
                    "type": "integer",
                    "foreignKey": "clients"
                },
                {
                    "filterable": true,
                    "name": "amount",
                    "title": "Purchase value",
                    "column": "amount",
                    "type": "double"
                },
                {
                    "filterable": true,
                    "name": "month",
                    "title": "Month",
                    "column": "month",
                    "type": "integer"
                },
                {
                    "filterable": true,
                    "name": "on_off_name",
                    "title": "Channel",
                    "column": "on_off_name",
                    "type": "string"
                },
                {
                    "filterable": true,
                    "name": "courier",
                    "title": "Delivery type",
                    "column": "courier",
                    "type": "string"
                }
            ],
            "linkedProperties": [
                {
                    "foreignKeyTitle": "Date ISO",
                    "properties": [
                        {
                            "dataset": "dim_dates",
                            "name": "date_iso",
                            "title": "date_iso",
                            "column": "date_iso",
                            "type": "string",
                            "filterable": true
                        },
                        {
                            "dataset": "dim_dates",
                            "name": "day_of_month",
                            "title": "day_of_month",
                            "column": "day_of_month",
                            "type": "integer",
                            "filterable": true
                        },
                        {
                            "dataset": "dim_dates",
                            "name": "day_of_quarter",
                            "title": "day_of_quarter",
                            "column": "day_of_quarter",
                            "type": "integer",
                            "filterable": true
                        },
                        {
                            "dataset": "dim_dates",
                            "name": "day_of_year",
                            "title": "day_of_year",
                            "column": "day_of_year",
                            "type": "integer",
                            "filterable": true
                        }
                    ]
                },
                {
                    "foreignKeyTitle": "Shop ID",
                    "properties": [
                        {
                            "dataset": "shops",
                            "name": "shop_id",
                            "title": "Shop ID",
                            "column": "shop_id",
                            "type": "integer",
                            "filterable": true
                        },
                        {
                            "dataset": "shops",
                            "name": "name",
                            "title": "Name",
                            "column": "name",
                            "type": "string",
                            "filterable": true
                        },
                        {
                            "dataset": "shops",
                            "name": "address",
                            "title": "Address",
                            "column": "address",
                            "type": "string",
                            "filterable": true
                        },
                        {
                            "dataset": "shops",
                            "name": "opening_hours",
                            "title": "Opening hours",
                            "column": "opening_hours",
                            "type": "string",
                            "filterable": true
                        },
                        {
                            "dataset": "shops",
                            "name": "opening_hours_sun",
                            "title": "Opening hours (Sun)",
                            "column": "opening_hours_sun",
                            "type": "string",
                            "filterable": true
                        },
                        {
                            "dataset": "shops",
                            "name": "partner",
                            "title": "Partner",
                            "column": "partner",
                            "type": "integer",
                            "filterable": true
                        },
                        {
                            "dataset": "shops",
                            "name": "lat",
                            "column": "lat",
                            "type": "latitude",
                            "filterable": true
                        },
                        {
                            "dataset": "shops",
                            "name": "lng",
                            "column": "lng",
                            "type": "longitude",
                            "filterable": true
                        }
                    ]
                }
            ]
        }


+ Request Fetching properties of all dataset

    + Headers
    
            Accept: application/json
            Authorization: Bearer {{accessToken}}
            
+ Response 200 (application/json)

        {
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/projects/ld3y3gtm7jt6z1fx/md/datasets?page=0&size=20&properties=filterable"
                }
            ],
            "content": [
                {
                    "dataset": "orders_dwh",
                    "listedProperties": "filterable",
                    "ownProperties": [
                        {
                            "filterable": true,
                            "name": "id",
                            "title": "Order ID",
                            "column": "id",
                            "type": "integer"
                        },
                        {
                            "filterable": true,
                            "name": "id_user",
                            "title": "Customer ID",
                            "column": "id_user",
                            "type": "integer"
                        },
                        {
                            "filterable": true,
                            "foreignKey": "dim_dates",
                            "name": "date",
                            "title": "Order time",
                            "column": "date",
                            "type": "string"
                        },
                        {
                            "filterable": true,
                            "name": "price",
                            "title": "Order size",
                            "column": "price",
                            "type": "double"
                        },
                        {
                            "filterable": true,
                            "name": "delay",
                            "title": "Order delay",
                            "column": "delay",
                            "type": "integer"
                        },
                        {
                            "filterable": true,
                            "name": "city",
                            "title": "City",
                            "column": "city",
                            "type": "string"
                        },
                        {
                            "filterable": true,
                            "foreignKey": "zsj_d_dwh",
                            "name": "kod_zsj_d",
                            "title": "Order location",
                            "column": "kod_zsj_d",
                            "type": "string"
                        }
                    ],
                    "linkedProperties": [
                        {
                            "foreignKeyTitle": "Order time",
                            "properties": [
                                {
                                    "dataset": "dim_dates_year",
                                    "filterable": true,
                                    "name": "year_name",
                                    "title": "Year",
                                    "column": "year_name",
                                    "type": "string"
                                },
                                {
                                    "dataset": "dim_dates_month",
                                    "filterable": true,
                                    "name": "month_name_en",
                                    "title": "Month",
                                    "column": "month_name_en",
                                    "type": "string"
                                },
                                {
                                    "dataset": "dim_dates_week",
                                    "filterable": true,
                                    "name": "week_name",
                                    "title": "Day of week",
                                    "column": "week_name",
                                    "type": "string"
                                }
                            ]
                        },
                        {
                            "foreignKeyTitle": "Order location",
                            "properties": [
                                {
                                    "dataset": "zsj_d_dwh",
                                    "filterable": true,
                                    "name": "kod_zsj_d",
                                    "title": "Basic administrative unit",
                                    "column": "kod_zsj_d",
                                    "type": "string"
                                },
                                {
                                    "dataset": "municipality_dwh",
                                    "filterable": true,
                                    "name": "municipality",
                                    "title": "Municipality",
                                    "column": "municipality",
                                    "type": "string"
                                },
                                {
                                    "dataset": "county_dwh",
                                    "filterable": true,
                                    "name": "county",
                                    "title": "County",
                                    "column": "county",
                                    "type": "string"
                                }
                            ]
                        }
                    ],
                    "links": [
                        {
                            "rel": "self",
                            "href": "/rest/projects/ld3y3gtm7jt6z1fx/md/datasetProperties?dataset=orders_dwh&properties=filterable"
                        }
                    ]
                }
            ],
            "page": {
                "size": 20,
                "totalElements": 1,
                "totalPages": 1,
                "number": 0
            }
        }

## Exports [/rest/projects/{projectId}/md/exports]
Export defines a set of dataset properties, which will be present in the exported file.

Detailed description in the [developer documentation](https://clevermaps.atlassian.net/wiki/spaces/CDD/pages/165773419/Exports).

### List Exports [GET /rest/projects/{projectId}/md/exports{?page,size,sort}]
Returns paged collection of all Exports in a project.

#### Response statuses
* 200 - OK

+ Parameters
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project
    + size (optional, number) - The count of records to return for one page
        + Default: `20`
    + page (optional, number) - Number of the page
        + Default: `0`
    + sort: `name,asc` (optional, string) - Name of the attribute to use for sorting the results, together with direction (`asc` or `desc`)

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

        {
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/projects/ld3y3gtm7jt6z1fx/md/exports?page=0&size=5&sort=id"
                }
            ],
            "content": [
                {
                    "id": "eqf3525q9jbs2hff",
                    "name": "project_export_1",
                    "type": "export",
                    "title": "Export version 1",
                    "description": "All delayed orders made in specific city districts.",
                    "content": {
                        "properties": [
                            "city_district_dwh.name",
                            "city_district_dwh.upper_name",
                            "orders_dwh.id",
                            "orders_dwh.id_user",
                            "orders_dwh.date",
                            "orders_dwh.price",
                            "orders_dwh.delay"
                        ]
                    },
                    "accessInfo": {
                        "createdAt": "2017-10-18T11:33:43Z"
                    },
                    "links": [
                        {
                            "rel": "self",
                            "href": "/rest/projects/ld3y3gtm7jt6z1fx/md/exports/eqf3525q9jbs2hff"
                        }
                    ]
                },
                {
                    "id": "in89l9pi38ldse6m",
                    "name": "project_export_2",
                    "type": "export",
                    "title": "Export version 2",
                    "content": {
                        "properties": [
                            "city_district_dwh.name",
                            "orders_dwh.id",
                            "orders_dwh.date",
                            "orders_dwh.price"
                        ]
                    },
                    "accessInfo": {
                        "createdAt": "2017-10-18T11:34:46Z"
                    },
                    "links": [
                        {
                            "rel": "self",
                            "href": "/rest/projects/ld3y3gtm7jt6z1fx/md/exports/in89l9pi38ldse6m"
                        }
                    ]
                }
            ],
            "page": {
                "size": 5,
                "totalElements": 2,
                "totalPages": 1,
                "number": 0
            }
        }

### Get Export by id [GET /rest/projects/{projectId}/md/exports/{id}]
Returns Export with given *id*.

#### Response statuses
* 200 - OK
* 404 - Not Found

+ Parameters
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project
    + id: `n2ma1svl5o5oihrc` (string) - Id of the export

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

        {
            "id": "j49psu9af5ijhbnk",
            "name": "retail_solution_demo_export_list_of_areas",
            "type": "export",
            "title": "List of Areas",
            "description": "Returns postcodes, lower super output areas, middle super output areas and value of indicators available in the view into CSV file.",
            "content": {
                "properties": [
                    "codepoint_plg.msoa11nm",
                    "codepoint_plg.lsoa11nm",
                    "codepoint_plg.postcode"
                ]
            },
            "accessInfo": {
                "createdAt": "2018-01-25T15:29:32Z"
            },
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/projects/vb2b3d8v91jao331/md/exports/j49psu9af5ijhbnk"
                }
            ]
        }


### Get Export by name [GET /rest/projects/{projectId}/md/exports?name={name}]
Returns Export with given *name*.

#### Response statuses
* 200 - OK
* 404 - Not Found

+ Parameters
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project
    + name: `retail_solution_demo_export_list_of_areas` (string) - Name the export object

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

        {
            "id": "j49psu9af5ijhbnk",
            "name": "retail_solution_demo_export_list_of_areas",
            "type": "export",
            "title": "List of Areas",
            "description": "Returns postcodes, lower super output areas, middle super output areas and value of indicators available in the view into CSV file.",
            "content": {
                "properties": [
                    "codepoint_plg.msoa11nm",
                    "codepoint_plg.lsoa11nm",
                    "codepoint_plg.postcode"
                ]
            },
            "accessInfo": {
                "createdAt": "2018-01-25T15:29:32Z"
            },
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/projects/vb2b3d8v91jao331/md/exports/j49psu9af5ijhbnk"
                }
            ]
        }


### Create Export [POST]
Creates new Export.

#### Security
Restricted to *EDITOR* project role that has the permission to update metadata of the project.

#### Response statuses
* 200 - OK - Export was successfully created
* 400 - Bad Request - there are syntax errors or validation violations
* 409 - Conflict - Export with the same name or id already exists

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer {{accessToken}}

    + Body

            {
                "name": "project_export_1",
                "type": "export",
                "title": "Export version 1",
                "description": "All delayed orders made in specific city districts.",
                "content": {
                    "properties": [
                        "city_district_dwh.name",
                        "city_district_dwh.upper_name",
                        "orders_dwh.id",
                        "orders_dwh.id_user",
                        "orders_dwh.date",
                        "orders_dwh.price",
                        "orders_dwh.delay"
                    ]
                }
            }

+ Response 200 (application/json)

            {
                "id": "eqf3525q9jbs2hff",
                "name": "project_export_1",
                "type": "export",
                "title": "Export version 1",
                "description": "All delayed orders made in specific city districts.",
                "content": {
                    "properties": [
                        "city_district_dwh.name",
                        "city_district_dwh.upper_name",
                        "orders_dwh.id",
                        "orders_dwh.id_user",
                        "orders_dwh.date",
                        "orders_dwh.price",
                        "orders_dwh.delay"
                    ]
                },
                "accessInfo": {
                    "createdAt": "2017-10-18T11:33:43Z"
                },
                "links": [
                    {
                        "rel": "self",
                        "href": "/rest/projects/ld3y3gtm7jt6z1fx/md/exports/eqf3525q9jbs2hff"
                    }
                ]
            }


### Update Export [PUT /rest/projects/{projectId}/md/exports/{id}]
Updates Export with given *id*.

#### Security
Restricted to *EDITOR* project role that has the permission to update metadata of the project.

#### Response statuses
* 200 - OK - Export was successfully updated
* 400 - Bad Request - there are syntax errors or validation violations
* 404 - Not Found - Export with given id was not found
* 409 - Conflict - Export with the same name or id already exists
* 412 - Precondition Failed - version provided in If-Match header is outdated
* 428 - Precondition Required - version was not provided in If-Match header

+ Request

    + Headers

            If-Match: "0"
            Content-Type: application/json
            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

### Delete Export [DELETE /rest/projects/{projectId}/md/exports/{id}]
Deletes Export with given *id*.

#### Security
Restricted to *EDITOR* project role that has the permission to delete metadata of the project.

#### Response statuses
* 204 - No Content - Export was successfully deleted
* 404 - Not Found - Export with given id was not found

+ Request

    + Headers

            Authorization: Bearer {{accessToken}}

+ Response 204

## Indicators [/rest/projects/{projectId}/md/indicators]
An Indicator represents a phenomenon that can be displayed on a map. It allows the user to configure how the phenomenon will be displayed.

Detailed description in the [developer documentation](https://clevermaps.atlassian.net/wiki/spaces/CDD/pages/120336682/Indicators).

### Create Indicator [POST]
Creates new Indicator.

#### Security
Restricted to *EDITOR* project role that has the permission to update metadata of the project.

#### Response statuses
* 200 - OK - Indicator was successfully created
* 400 - Bad Request - there are syntax errors or validation violations
* 409 - Conflict - Indicator with the same name or id already exists

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer {{accessToken}}

    + Body

            {
                "name": "average_delay_indicator",
                "type": "indicator",
                "title": "Average delay",
                "description": "Average order delay",
                "content": {
                    "metric": "/rest/projects/$projectId/md/metrics?name=average_delay_metric",
                    "scale": "negative",
                    "distribution": "geometric",
                    "format": {
                        "type": "number",
                        "fraction": 1,
                        "symbol": "min"
                    }
                }
            }

+ Response 200 (application/json)

            {
                "id": "k6hornp6l2bmo14f",
                "name": "average_delay_indicator",
                "type": "indicator",
                "title": "Average delay",
                "description": "Average order delay",
                "content": {
                    "metric": "/rest/projects/$projectId/md/metrics?name=average_delay_metric",
                    "scale": "negative",
                    "distribution": "geometric",
                    "format": {
                        "type": "number",
                        "fraction": 1,
                        "symbol": "min"
                    }
                },
                "accessInfo": {
                    "createdAt": "2017-10-18T11:49:47Z"
                },
                "links": [
                    {
                        "rel": "self",
                        "href": "/rest/projects/ld3y3gtm7jt6z1fx/md/indicators/k6hornp6l2bmo14f"
                    }
                ]
            }

### Get Indicator by id [GET /rest/projects/{projectId}/md/indicators/{id}]
Returns Indicator with given *id*.

#### Response statuses
* 200 - OK
* 404 - Not Found

+ Parameters
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project
    + id: `n2ma1svl5o5oihrc` (string) - Id of the indicator

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

        {
            "id": "ipadjtohq10cgq4r",
            "name": "average_purchase_indicator",
            "type": "indicator",
            "title": "Average Purchase value",
            "description": "Average purchase value indicates the average monetary size of purchases or orders made offline or online.",
            "content": {
                "metric": "/rest/projects/vb2b3d8v91jao331/md/metrics?name=average_purchase_metric",
                "scale": "standard",
                "distribution": "uniform",
                "format": {
                    "type": "number",
                    "fraction": 1,
                    "symbol": "£"
                }
            },
            "accessInfo": {
                "createdAt": "2018-01-25T15:29:38Z"
            },
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/projects/vb2b3d8v91jao331/md/indicators/ipadjtohq10cgq4r"
                }
            ]
        }

### Get Indicator by name [GET /rest/projects/{projectId}/md/indicators{?name}]
Returns Indicator with given *name*.

#### Response statuses
* 200 - OK
* 404 - Not Found

+ Parameters
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project
    + name: `average_purchase_indicator` (string) - Name of the indicator

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

        {
            "id": "ipadjtohq10cgq4r",
            "name": "average_purchase_indicator",
            "type": "indicator",
            "title": "Average Purchase value",
            "description": "Average purchase value indicates the average monetary size of purchases or orders made offline or online.",
            "content": {
                "metric": "/rest/projects/vb2b3d8v91jao331/md/metrics?name=average_purchase_metric",
                "scale": "standard",
                "distribution": "uniform",
                "format": {
                    "type": "number",
                    "fraction": 1,
                    "symbol": "£"
                }
            },
            "accessInfo": {
                "createdAt": "2018-01-25T15:29:38Z"
            },
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/projects/vb2b3d8v91jao331/md/indicators/ipadjtohq10cgq4r"
                }
            ]
        }

### List Indicators [GET /rest/projects/{projectId}/md/indicators{?page,size,sort}]
Returns paged collection of all Indicators in a project.

#### Response statuses
* 200 - OK

+ Parameters
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project
    + size (optional, number) - The count of records to return for one page
        + Default: `20`
    + page (optional, number) - Number of the page
        + Default: `0`
    + sort: `name,asc` (optional, string) - Name of the attribute to use for sorting the results, together with direction (`asc` or `desc`)

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

    + Body

            {
                "links": [
                    {
                        "rel": "self",
                        "href": "/rest/projects/vb2b3d8v91jao331/md/indicators?page=0&size=5&sort=id"
                    }
                ],
                "content": [
                    {
                        "id": "k6hornp6l2bmo14f",
                        "name": "average_delay_indicator",
                        "type": "indicator",
                        "title": "Average delay",
                        "description": "Average order delay",
                        "content": {
                            "metric": "/rest/projects/vb2b3d8v91jao331/md/metrics?name=average_delay_metric",
                            "scale": "negative",
                            "distribution": "geometric",
                            "format": {
                                "type": "number",
                                "fraction": 1,
                                "symbol": "min"
                            }
                        },
                        "accessInfo": {
                            "createdAt": "2017-10-18T11:49:47Z"
                        },
                        "links": [
                            {
                                "rel": "self",
                                "href": "/rest/projects/vb2b3d8v91jao331/md/indicators/k6hornp6l2bmo14f"
                            }
                        ]
                    },
                    {
                        "id": "utvm7qp1i0qu0eaa",
                        "name": "average_purchase_indicator",
                        "type": "indicator",
                        "title": "Average purchase",
                        "description": "Average purchase value of a customer",
                        "content": {
                            "metric": "/rest/projects/vb2b3d8v91jao331/md/metrics?name=average_purchase_metric",
                            "scale": "standard",
                            "distribution": "uniform",
                            "format": {
                                "type": "number",
                                "fraction": 1,
                                "symbol": "£"
                            }
                        },
                        "accessInfo": {
                            "createdAt": "2017-10-18T11:51:05Z"
                        },
                        "links": [
                            {
                                "rel": "self",
                                "href": "/rest/projects/vb2b3d8v91jao331/md/indicators/utvm7qp1i0qu0eaa"
                            }
                        ]
                    }
                ],
                "page": {
                    "size": 5,
                    "totalElements": 2,
                    "totalPages": 1,
                    "number": 0
                }
            }

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "links": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "rel": {
                                    "type": "string"
                                },
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string"
                                },
                                "title": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "content": {
                                    "type": "object",
                                    "properties": {
                                        "metric": {
                                            "type": "string"
                                        },
                                        "scale": {
                                            "type": "string"
                                        },
                                        "distribution": {
                                            "type": "string"
                                        },
                                        "format": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "fraction": {
                                                    "type": "number"
                                                },
                                                "symbol": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "fraction"
                                            ]
                                        }
                                    }
                                },
                                "accessInfo": {
                                    "type": "object",
                                    "properties": {
                                        "createdAt": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "links": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "rel": {
                                                "type": "string"
                                            },
                                            "href": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            },
                            "required": [
                                "id",
                                "name",
                                "type",
                                "title",
                                "description",
                                "content",
                                "accessInfo",
                                "links"
                            ]
                        }
                    },
                    "page": {
                        "type": "object",
                        "properties": {
                            "size": {
                                "type": "number"
                            },
                            "totalElements": {
                                "type": "number"
                            },
                            "totalPages": {
                                "type": "number"
                            },
                            "number": {
                                "type": "number"
                            }
                        },
                        "required": [
                            "size",
                            "totalElements",
                            "totalPages",
                            "number"
                        ]
                    }
                }
            }


### Update Indicator [PUT /rest/projects/{projectId}/md/indicators/{id}]
Updates Indicator with given *id*.

#### Security
Restricted to *EDITOR* project role that has the permission to update metadata of the project.

#### Response statuses
* 200 - OK - Indicator was successfully updated
* 400 - Bad Request - there are syntax errors or validation violations
* 404 - Not Found - Indicator with given id was not found
* 409 - Conflict - Indicator with the same name or id already exists
* 412 - Precondition Failed - version provided in If-Match header is outdated
* 428 - Precondition Required - version was not provided in If-Match header

+ Request

    + Headers

            If-Match: "0"
            Content-Type: application/json
            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

### Delete Indicator [DELETE /rest/projects/{projectId}/md/indicators/{id}]
Deletes Indicator with given *id*.

#### Security
Restricted to *EDITOR* project role that has the permission to delete metadata of the project.

#### Response statuses
* 204 - No Content - Indicator was successfully deleted
* 404 - Not Found - Indicator with given id was not found

+ Request

    + Headers

            Authorization: Bearer {{accessToken}}

+ Response 204


## Indicator Drills [/rest/projects/{projectId}/md/indicatorDrills]
An Indicator Drill allows you to further analyse an Indicator. Indicator Drill consists of an array of blocks.

Detailed description in the [developer documentation](https://clevermaps.atlassian.net/wiki/spaces/CDD/pages/120336740/Indicator+drills).

### Create Indicator Drill [POST]
Creates new Indicator Drill.

#### Security
Restricted to *EDITOR* project role that has the permission to update metadata of the project.

#### Response statuses
* 200 - OK - Indicator Drill was successfully created
* 400 - Bad Request - there are syntax errors or validation violations
* 409 - Conflict - Indicator Drill with the same name or id already exists

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer {{accessToken}}

    + Body

            {
                "name": "turnover_indicator_drill",
                "type": "indicatorDrill",
                "content": {
                    "blocks": [
                        {
                            "type": "histogram",
                            "description": "Progress of indicator Turnover value over selected period of time."
                        },
                        {
                            "type": "ranking",
                            "size": 10,
                            "description": "Rank of areas according to Turnover value."
                        },
                        {
                            "type": "trend",
                            "description": "Distribution of Turnover in all areas of selected granularity."
                        },
                        {
                            "type": "barchart",
                            "title": "Turnover by channel",
                            "splitProperty": "baskets.on_off_name",
                            "orderBy": {
                                "property": "baskets.on_off_name",
                                "direction": "asc",
                                "sort": "asc"
                            },
                            "description": "Turnover by channel."
                        }
                    ]
                }
            }

+ Response 200 (application/json)

            {
                "id": "oq0d6btmb7istcc4",
                "name": "turnover_indicator_drill",
                "type": "indicatorDrill",
                "content": {
                    "blocks": [
                        {
                            "type": "histogram",
                            "description": "Progress of indicator Turnover value over selected period of time."
                        },
                        {
                            "type": "ranking",
                            "size": 10,
                            "description": "Rank of areas according to Turnover value."
                        },
                        {
                            "type": "trend",
                            "description": "Distribution of Turnover in all areas of selected granularity."
                        },
                        {
                            "type": "barchart",
                            "title": "Turnover by channel",
                            "splitProperty": "baskets.on_off_name",
                            "orderBy": {
                                "property": "baskets.on_off_name",
                                "direction": "asc",
                                "sort": "asc"
                            },
                            "description": "Turnover by channel."
                        }
                    ]
                },
                "accessInfo": {
                    "createdAt": "2017-10-18T12:04:52Z"
                },
                "links": [
                    {
                        "rel": "self",
                        "href": "/rest/projects/ld3y3gtm7jt6z1fx/md/indicatorDrills/oq0d6btmb7istcc4"
                    }
                ]
            }

### Get Indicator Drill by id [GET /rest/projects/{projectId}/md/indicatorDrills/{id}]
Returns Indicator Drill with given *id*.

#### Response statuses
* 200 - OK
* 404 - Not Found

+ Parameters
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project
    + id: `vj1q1d41i96skcjv` (string) - Id of the indicator drill

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

        {
            "id": "vj1q1d41i96skcjv",
            "name": "average_purchase_indicator_drill",
            "type": "indicatorDrill",
            "content": {
                "blocks": [
                    {
                        "type": "histogram",
                        "description": "Progress of indicator value over selected period of time"
                    },
                    {
                        "type": "ranking",
                        "size": 10,
                        "description": "Ranking of related features"
                    },
                    {
                        "type": "trend",
                        "description": "Distribution of selected indicator in all areas of selected granularity"
                    },
                    {
                        "type": "barchart",
                        "title": "Average Purchase value by channel",
                        "splitProperty": "baskets.on_off_name",
                        "orderBy": {
                            "property": "baskets.on_off_name",
                            "direction": "asc",
                            "sort": "asc"
                        },
                        "description": "Average Purchase value by channel"
                    }
                ]
            },
            "accessInfo": {
                "createdAt": "2018-01-25T15:29:33Z"
            },
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/projects/vb2b3d8v91jao331/md/indicatorDrills/vj1q1d41i96skcjv"
                }
            ]
        }

### Get Indicator Drill by name [GET /rest/projects/{projectId}/md/indicatorDrills?name={name}]
Returns Indicator Drill with given *name*.

#### Response statuses
* 200 - OK
* 404 - Not Found

+ Parameters
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project
    + name: `average_purchase_indicator_drill` (string) - Name of the indicator drill object

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

        {
            "id": "vj1q1d41i96skcjv",
            "name": "average_purchase_indicator_drill",
            "type": "indicatorDrill",
            "content": {
                "blocks": [
                    {
                        "type": "histogram",
                        "description": "Progress of indicator value over selected period of time"
                    },
                    {
                        "type": "ranking",
                        "size": 10,
                        "description": "Ranking of related features"
                    },
                    {
                        "type": "trend",
                        "description": "Distribution of selected indicator in all areas of selected granularity"
                    },
                    {
                        "type": "barchart",
                        "title": "Average Purchase value by channel",
                        "splitProperty": "baskets.on_off_name",
                        "orderBy": {
                            "property": "baskets.on_off_name",
                            "direction": "asc",
                            "sort": "asc"
                        },
                        "description": "Average Purchase value by channel"
                    }
                ]
            },
            "accessInfo": {
                "createdAt": "2018-01-25T15:29:33Z"
            },
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/projects/vb2b3d8v91jao331/md/indicatorDrills/vj1q1d41i96skcjv"
                }
            ]
        }

### List Indicator Drills [GET /rest/projects/{projectId}/md/indicatorDrills]
Returns paged collection of all Indicator Drills in a project.

#### Response statuses
* 200 - OK

+ Parameters
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project


+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

        {
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/projects/ld3y3gtm7jtvb2b3d8v91jao3316z1fx/md/indicatorDrills?page=0&size=5&sort=id"
                }
            ],
            "content": [
                {
                    "id": "euh1qkanhjo28690",
                    "name": "average_purchase_indicator_drill",
                    "type": "indicatorDrill",
                    "content": {
                        "blocks": [
                            {
                                "type": "histogram",
                                "description": "Progress of indicator value over selected period of time"
                            },
                            {
                                "type": "ranking",
                                "size": 10,
                                "description": "Ranking of areas with the highest average purchases"
                            },
                            {
                                "type": "trend",
                                "description": "Distribution of selected indicator in all areas of selected granularity"
                            },
                            {
                                "type": "barchart",
                                "title": "Purchases by channel",
                                "splitProperty": "baskets.on_off_name",
                                "orderBy": {
                                    "property": "baskets.on_off_name",
                                    "direction": "asc"
                                },
                                "description": "Average purchase by channel (Online / Offline)"
                            }
                        ]
                    },
                    "accessInfo": {
                        "createdAt": "2017-10-18T12:05:38Z"
                    },
                    "links": [
                        {
                            "rel": "self",
                            "href": "/rest/projects/vb2b3d8v91jao331/md/indicatorDrills/euh1qkanhjo28690"
                        }
                    ]
                },
                {
                    "id": "oq0d6btmb7istcc4",
                    "name": "turnover_indicator_drill",
                    "type": "indicatorDrill",
                    "content": {
                        "blocks": [
                            {
                                "type": "histogram",
                                "description": "Progress of indicator Turnover value over selected period of time."
                            },
                            {
                                "type": "ranking",
                                "size": 10,
                                "description": "Rank of areas according to Turnover value."
                            },
                            {
                                "type": "trend",
                                "description": "Distribution of Turnover in all areas of selected granularity."
                            },
                            {
                                "type": "barchart",
                                "title": "Turnover by channel",
                                "splitProperty": "baskets.on_off_name",
                                "orderBy": {
                                    "property": "baskets.on_off_name",
                                    "direction": "asc",
                                    "sort": "asc"
                                },
                                "description": "Turnover by channel."
                            }
                        ]
                    },
                    "accessInfo": {
                        "createdAt": "2017-10-18T12:04:52Z"
                    },
                    "links": [
                        {
                            "rel": "self",
                            "href": "/rest/projects/vb2b3d8v91jao331/md/indicatorDrills/oq0d6btmb7istcc4"
                        }
                    ]
                }
            ],
            "page": {
                "size": 5,
                "totalElements": 2,
                "totalPages": 1,
                "number": 0
            }
        }

### Update Indicator Drill [PUT /rest/projects/{projectId}/md/indicatorDrills/{id}]
Updates Indicator Drill with given *id*.

#### Security
Restricted to *EDITOR* project role that has the permission to update metadata of the project.

#### Response statuses
* 200 - OK - Indicator Drill was successfully updated
* 400 - Bad Request - there are syntax errors or validation violations
* 404 - Not Found - Indicator Drill with given id was not found
* 409 - Conflict - Indicator Drill with the same name or id already exists
* 412 - Precondition Failed - version provided in If-Match header is outdated
* 428 - Precondition Required - version was not provided in If-Match header

+ Request

    + Headers

            If-Match: "0"
            Content-Type: application/json
            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

### Delete Indicator Drill [DELETE /rest/projects/{projectId}/md/indicatorDrills/{id}]
Deletes Indicator Drill with given *id*.

#### Security
Restricted to *EDITOR* project role that has the permission to delete metadata of the project.

#### Response statuses
* 204 - No Content - Indicator Drill was successfully deleted
* 404 - Not Found - Indicator Drill with given id was not found

+ Request

    + Headers

            Authorization: Bearer {{accessToken}}

+ Response 204

## Markers [/rest/projects/{projectId}/md/markers]
Marker represents a specific location on a map. It can be the location of a shop, a warehouse, an ATM, or anything else really.

Detailed description in the [developer documentation](https://clevermaps.atlassian.net/wiki/spaces/CDD/pages/120337139/Markers).

### Create Marker [POST]
Creates new Marker.

#### Security
Restricted to *EDITOR* project role that has the permission to update metadata of the project.

#### Response statuses
* 200 - OK - Marker was successfully created
* 400 - Bad Request - there are syntax errors or validation violations
* 409 - Conflict - Marker with the same name or id already exists

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer {{accessToken}}

    + Body

            {
                "name": "marker_warehouse",
                "type": "marker",
                "title": "Warehouses",
                "description": "Warehouses owned by the company.",
                "content": {
                    "visible": true,
                    "filterBy": [
                        {
                            "property": "warehouse.type",
                            "value": "1",
                            "operator": "eq"
                        }
                    ],
                    "style": "marker-orange"
                }
            }

+ Response 200 (application/json)

            {
                "id": "pkcu7en74e7695tm",
                "name": "marker_warehouse",
                "type": "marker",
                "title": "Warehouses",
                "description": "Warehouses owned by the company.",
                "content": {
                    "visible": true,
                    "filterBy": [
                        {
                            "property": "warehouse.type",
                            "value": "1",
                            "operator": "eq"
                        }
                    ],
                    "style": "marker-orange"
                },
                "accessInfo": {
                    "createdAt": "2017-10-18T12:09:48Z"
                },
                "links": [
                    {
                        "rel": "self",
                        "href": "/rest/projects/ld3y3gtm7jt6z1fx/md/markers/pkcu7en74e7695tm"
                    }
                ]
            }

### Get Marker by id [GET /rest/projects/{projectId}/md/markers/{id}]
Returns Marker with given *id*.

#### Response statuses
* 200 - OK
* 404 - Not Found

+ Parameters
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project
    + id: `fvnckjtij5v863hb` (string) - Id of the marker


+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

        {
            "id": "fvnckjtij5v863hb",
            "name": "marker_partners",
            "type": "marker",
            "title": "Pick Up Partners",
            "description": "Shops",
            "content": {
                "visible": true,
                "filterBy": [
                    {
                        "property": "shops.partner",
                        "value": 1,
                        "operator": "eq"
                    }
                ],
                "style": "marker-green"
            },
            "accessInfo": {
                "createdAt": "2018-01-25T15:29:43Z"
            },
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/projects/vb2b3d8v91jao331/md/markers/fvnckjtij5v863hb"
                }
            ]
        }

### Get Marker by name [GET /rest/projects/{projectId}/md/markers{?name}]

Returns Marker with given *name*.

#### Response statuses
* 200 - OK
* 404 - Not Found

+ Parameters
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project
    + name: `marker_partners` (string) - The marker name


+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

        {
            "id": "fvnckjtij5v863hb",
            "name": "marker_partners",
            "type": "marker",
            "title": "Pick Up Partners",
            "description": "Shops",
            "content": {
                "visible": true,
                "filterBy": [
                    {
                        "property": "shops.partner",
                        "value": 1,
                        "operator": "eq"
                    }
                ],
                "style": "marker-green"
            },
            "accessInfo": {
                "createdAt": "2018-01-25T15:29:43Z"
            },
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/projects/vb2b3d8v91jao331/md/markers/fvnckjtij5v863hb"
                }
            ]
        }

### List Markers [GET /rest/projects/{projectId}/md/markers{?page,size,sort}]

Returns paged collection of all Markers in a project.

#### Response statuses
* 200 - OK

+ Parameters
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project
    + size (optional, number) - The count of records to return for one page
        + Default: `20`
    + page (optional, number) - Number of the page
        + Default: `0`
    + sort: `name,asc` (optional, string) - Name of the attribute to use for sorting the results, together with direction (`asc` or `desc`)


+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

        {
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/projects/vb2b3d8v91jao331/md/markers?page=0&size=20"
                }
            ],
            "content": [
                {
                    "id": "fvnckjtij5v863hb",
                    "name": "marker_partners",
                    "type": "marker",
                    "title": "Pick Up Partners",
                    "description": "Shops",
                    "content": {
                        "visible": true,
                        "filterBy": [
                            {
                                "property": "shops.partner",
                                "value": 1,
                                "operator": "eq"
                            }
                        ],
                        "style": "marker-green"
                    },
                    "accessInfo": {
                        "createdAt": "2018-01-25T15:29:43Z"
                    },
                    "links": [
                        {
                            "rel": "self",
                            "href": "/rest/projects/vb2b3d8v91jao331/md/markers/fvnckjtij5v863hb"
                        }
                    ]
                },
                {
                    "id": "tso74eoifpeoihch",
                    "name": "marker_shops",
                    "type": "marker",
                    "title": "Stores",
                    "description": "Stores",
                    "content": {
                        "visible": true,
                        "filterBy": [
                            {
                                "property": "shops.partner",
                                "value": 0,
                                "operator": "eq"
                            }
                        ],
                        "style": "marker-orange"
                    },
                    "accessInfo": {
                        "createdAt": "2018-01-25T15:29:44Z"
                    },
                    "links": [
                        {
                            "rel": "self",
                            "href": "/rest/projects/vb2b3d8v91jao331/md/markers/tso74eoifpeoihch"
                        }
                    ]
                }
            ],
            "page": {
                "size": 20,
                "totalElements": 2,
                "totalPages": 1,
                "number": 0
            }
        }   

### Update Marker [PUT /rest/projects/{projectId}/md/markers/{id}]
Updates Marker with given *id*.

#### Security
Restricted to *EDITOR* project role that has the permission to update metadata of the project.

#### Response statuses
* 200 - OK - Marker was successfully updated
* 400 - Bad Request - there are syntax errors or validation violations
* 404 - Not Found - Marker with given id was not found
* 409 - Conflict - Marker with the same name or id already exists
* 412 - Precondition Failed - version provided in If-Match header is outdated
* 428 - Precondition Required - version was not provided in If-Match header

+ Request

    + Headers

            If-Match: "0"
            Content-Type: application/json
            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

### Delete Marker [DELETE /rest/projects/{projectId}/md/markers/{id}]
Deletes Marker with given *id*.

#### Security
Restricted to *EDITOR* project role that has the permission to delete metadata of the project.

#### Response statuses
* 204 - No Content - Marker was successfully deleted
* 404 - Not Found - Marker with given id was not found

+ Request

    + Headers

            Authorization: Bearer {{accessToken}}

+ Response 204


## Marker Selectors [/rest/projects/{projectId}/md/markerSelectors]
Marker Selector groups a type of markers and assigns them to a Dataset.

Detailed description in the [developer documentation](https://clevermaps.atlassian.net/wiki/spaces/CDD/pages/120337200/Marker+selectors).

### Create Marker Selector [POST]
Creates new Marker Selector.

#### Security
Restricted to *EDITOR* project role that has the permission to update metadata of the project.

#### Response statuses
* 200 - OK - Marker Selector was successfully created
* 400 - Bad Request - there are syntax errors or validation violations
* 409 - Conflict - Marker Selector with the same name or id already exists

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer {{accessToken}}

    + Body

            {
                "name": "shops_marker_selector",
                "type": "markerSelector",
                "content": {
                    "categories": [
                        {
                            "markers": [
                                {
                                    "visible": true,
                                    "name": "red_marker"
                                },
                                {
                                    "visible": true,
                                    "name": "orange_marker"
                                },
                                {
                                    "visible": true,
                                    "name": "green_marker"
                                }
                            ],
                            "dataset": "/rest/projects/$projectId/md/datasets?name=shops_dwh"
                        }
                    ]
                }
            }

+ Response 200 (application/json)

            {
                "id": "mgp4vpel6orfeh85",
                "name": "shops_marker_selector",
                "type": "markerSelector",
                "content": {
                    "categories": [
                        {
                            "markers": [
                                {
                                    "visible": true,
                                    "name": "red_marker"
                                },
                                {
                                    "visible": true,
                                    "name": "orange_marker"
                                },
                                {
                                    "visible": true,
                                    "name": "green_marker"
                                }
                            ],
                            "dataset": "/rest/projects/$projectId/md/datasets?name=shops_dwh"
                        }
                    ]
                },
                "accessInfo": {
                    "createdAt": "2017-10-18T12:18:03Z"
                },
                "links": [
                    {
                        "rel": "self",
                        "href": "/rest/projects/ld3y3gtm7jt6z1fx/md/markerSelectors/mgp4vpel6orfeh85"
                    }
                ]
            }

### Get Marker Selector by id [GET /rest/projects/{projectId}/md/markerSelectors/{id}]

Returns Marker Selector with given *id*.

#### Response statuses
* 200 - OK
* 404 - Not Found

+ Parameters
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project
    + id: `r05a5hfr1pi3sndp` (string) - Id of the marker


+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

            {
                "id": "r05a5hfr1pi3sndp",
                "name": "marker_selector_shops",
                "type": "markerSelector",
                "content": {
                    "categories": [
                        {
                            "dataset": "/rest/projects/vb2b3d8v91jao331/md/datasets?name=shops",
                            "markers": [
                                {
                                    "name": "marker_shops",
                                    "visible": true
                                },
                                {
                                    "name": "marker_partners",
                                    "visible": true
                                }
                            ]
                        }
                    ]
                },
                "accessInfo": {
                    "createdAt": "2018-01-25T15:29:44Z"
                },
                "links": [
                    {
                        "rel": "self",
                        "href": "/rest/projects/vb2b3d8v91jao331/md/markerSelectors/r05a5hfr1pi3sndp"
                    }
                ]
            }

### Get Marker Selector by name [GET /rest/projects/{projectId}/md/markerSelectors{?name}]

Returns Marker Selector with given *name*.

#### Response statuses
* 200 - OK
* 404 - Not Found

+ Parameters
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project
    + name: `marker_selector_shops` (string) - The marker name


+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

            {
                "id": "r05a5hfr1pi3sndp",
                "name": "marker_selector_shops",
                "type": "markerSelector",
                "content": {
                    "categories": [
                        {
                            "dataset": "/rest/projects/vb2b3d8v91jao331/md/datasets?name=shops",
                            "markers": [
                                {
                                    "name": "marker_shops",
                                    "visible": true
                                },
                                {
                                    "name": "marker_partners",
                                    "visible": true
                                }
                            ]
                        }
                    ]
                },
                "accessInfo": {
                    "createdAt": "2018-01-25T15:29:44Z"
                },
                "links": [
                    {
                        "rel": "self",
                        "href": "/rest/projects/vb2b3d8v91jao331/md/markerSelectors/r05a5hfr1pi3sndp"
                    }
                ]
            }

### List Marker Selectors [GET /rest/projects/{projectId}/md/markerSelectors{?page,size,sort}]

Returns paged collection of all Marker Selectors in a project.

#### Response statuses
* 200 - OK

+ Parameters
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project
    + size (optional, number) - The count of records to return for one page
        + Default: `20`
    + page (optional, number) - Number of the page
        + Default: `0`
    + sort: `name,asc` (optional, string) - Name of the attribute to use for sorting the results, together with direction (`asc` or `desc`)


+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

            {
                "links": [
                    {
                        "rel": "self",
                        "href": "/rest/projects/vb2b3d8v91jao331/md/markerSelectors?page=0&size=20"
                    }
                ],
                "content": [
                    {
                        "id": "r05a5hfr1pi3sndp",
                        "name": "marker_selector_shops",
                        "type": "markerSelector",
                        "content": {
                            "categories": [
                                {
                                    "dataset": "/rest/projects/vb2b3d8v91jao331/md/datasets?name=shops",
                                    "markers": [
                                        {
                                            "name": "marker_shops",
                                            "visible": true
                                        },
                                        {
                                            "name": "marker_partners",
                                            "visible": true
                                        }
                                    ]
                                }
                            ]
                        },
                        "accessInfo": {
                            "createdAt": "2018-01-25T15:29:44Z"
                        },
                        "links": [
                            {
                                "rel": "self",
                                "href": "/rest/projects/vb2b3d8v91jao331/md/markerSelectors/r05a5hfr1pi3sndp"
                            }
                        ]
                    }
                ],
                "page": {
                    "size": 20,
                    "totalElements": 1,
                    "totalPages": 1,
                    "number": 0
                }
            }


### Update Marker Selector [PUT /rest/projects/{projectId}/md/markerSelectors/{id}]
Updates Marker Selector with given *id*.

#### Security
Restricted to *EDITOR* project role that has the permission to update metadata of the project.

#### Response statuses
* 200 - OK - Marker Selector was successfully updated
* 400 - Bad Request - there are syntax errors or validation violations
* 404 - Not Found - Marker Selector with given id was not found
* 409 - Conflict - Marker Selector with the same name or id already exists
* 412 - Precondition Failed - version provided in If-Match header is outdated
* 428 - Precondition Required - version was not provided in If-Match header

+ Request

    + Headers

            If-Match: "0"
            Content-Type: application/json
            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

### Delete Marker Selector [DELETE /rest/projects/{projectId}/md/markerSelectors/{id}]
Deletes Marker Selector with given *id*.

#### Security
Restricted to *EDITOR* project role that has the permission to delete metadata of the project.

#### Response statuses
* 204 - No Content - Marker Selector was successfully deleted
* 404 - Not Found - Marker Selector with given id was not found

+ Request

    + Headers

            Authorization: Bearer {{accessToken}}

+ Response 204


## Metrics [/rest/projects/{projectId}/md/metrics]
A Metric is an expression which describes a computation that will be performed over the project's data.

Detailed description in the [developer documentation](https://clevermaps.atlassian.net/wiki/spaces/CDD/pages/120336991/Metrics).

### Create Metric [POST]
Creates new Metric.

#### Security
Restricted to *EDITOR* project role that has the permission to update metadata of the project.

#### Response statuses
* 200 - OK - Metric was successfully created
* 400 - Bad Request - there are syntax errors or validation violations
* 409 - Conflict - Metric with the same name or id already exists

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer {{accessToken}}

    + Body

            {
                "name": "orders_metric",
                "type": "metric",
                "title": "Orders",
                "description": "Number of orders (according to chosen time window and filters)",
                "content": {
                    "type": "function_count",
                    "content": [
                        {
                            "type": "property",
                            "value": "objednavky_dwh.id"
                        }
                    ]
                }
            }

+ Response 200 (application/json)

            {
                "id": "hgosavqognbk4qj7",
                "name": "orders_metric",
                "type": "metric",
                "title": "Orders",
                "description": "Number of orders (according to chosen time window and filters)",
                "content": {
                    "type": "function_count",
                    "content": [
                        {
                            "type": "property",
                            "value": "objednavky_dwh.id"
                        }
                    ]
                },
                "accessInfo": {
                    "createdAt": "2017-10-18T12:24:39Z"
                },
                "links": [
                    {
                        "rel": "self",
                        "href": "/rest/projects/ld3y3gtm7jt6z1fx/md/metrics/hgosavqognbk4qj7"
                    }
                ]
            }

### Get Metric by id [GET /rest/projects/{projectId}/md/metrics/{id}]

Returns Metric with given *id*.

#### Response statuses
* 200 - OK
* 404 - Not Found

+ Parameters
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project
    + id: `nt95udbdc2c0qv7k` (string) - Id of the export

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

        {
            "id": "nt95udbdc2c0qv7k",
            "name": "potential_customers_metric",
            "type": "metric",
            "content": {
                "type": "function_ifnull",
                "content": [
                    {
                        "type": "function_minus",
                        "content": [
                            {
                                "type": "function_sum",
                                "content": [
                                    {
                                        "type": "property",
                                        "value": "demography_postcode.households"
                                    }
                                ],
                                "options": {
                                    "aggregateBy": [],
                                    "withoutFilters": [
                                        "dim_dates.*",
                                        "baskets.*"
                                    ],
                                    "acceptFilters": [],
                                    "filterBy": []
                                }
                            },
                            {
                                "type": "function_count",
                                "content": [
                                    {
                                        "type": "property",
                                        "value": "clients.client_id"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "number",
                        "value": 0
                    }
                ]
            },
            "accessInfo": {
                "createdAt": "2018-01-25T15:29:48Z"
            },
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/projects/vb2b3d8v91jao331/md/metrics/nt95udbdc2c0qv7k"
                }
            ]
        }

### Get Metric by name [GET /rest/projects/{projectId}/md/metrics{?name}]
Returns Metric with given *name*.

#### Response statuses
* 200 - OK
* 404 - Not Found

+ Parameters
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project
    + name: `potential_customers_metric` (string) - Name of the metric

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

        {
            "id": "nt95udbdc2c0qv7k",
            "name": "potential_customers_metric",
            "type": "metric",
            "content": {
                "type": "function_ifnull",
                "content": [
                    {
                        "type": "function_minus",
                        "content": [
                            {
                                "type": "function_sum",
                                "content": [
                                    {
                                        "type": "property",
                                        "value": "demography_postcode.households"
                                    }
                                ],
                                "options": {
                                    "aggregateBy": [],
                                    "withoutFilters": [
                                        "dim_dates.*",
                                        "baskets.*"
                                    ],
                                    "acceptFilters": [],
                                    "filterBy": []
                                }
                            },
                            {
                                "type": "function_count",
                                "content": [
                                    {
                                        "type": "property",
                                        "value": "clients.client_id"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "number",
                        "value": 0
                    }
                ]
            },
            "accessInfo": {
                "createdAt": "2018-01-25T15:29:48Z"
            },
            "links": [
                {
                    "rel": "self",
                    "href": "/rest/projects/vb2b3d8v91jao331/md/metrics/nt95udbdc2c0qv7k"
                }
            ]
        }

### List Metrics [GET /rest/projects/{projectId}/md/metrics{?page,size,sort}]

Returns paged collection of all Metrics in a project.

#### Response statuses
* 200 - OK

+ Parameters
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project
    + size (optional, number) - The count of records to return for one page
        + Default: `20`
    + page (optional, number) - Number of the page
        + Default: `0`
    + sort: `name,asc` (optional, string) - Name of the attribute to use for sorting the results, together with direction (`asc` or `desc`)


+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

    + Body

            {
                "links": [
                    {
                        "rel": "self",
                        "href": "/rest/projects/vb2b3d8v91jao331/md/metrics?page=0&size=20"
                    }
                ],
                "content": [
                    {
                        "id": "onb0i86sf4415ks7",
                        "name": "average_purchase_metric",
                        "type": "metric",
                        "content": {
                            "type": "function_avg",
                            "content": [
                                {
                                    "type": "property"
                                }
                            ]
                        },
                        "accessInfo": {
                            "createdAt": "2018-01-25T15:29:45Z"
                        },
                        "links": [
                            {
                                "rel": "self",
                                "href": "/rest/projects/vb2b3d8v91jao331/md/metrics/onb0i86sf4415ks7"
                            }
                        ]
                    }
                ],
                "page": {
                    "size": 20,
                    "totalElements": 10,
                    "totalPages": 1,
                    "number": 0
                }
            }

### Update Metric [PUT /rest/projects/{projectId}/md/metrics/{id}]
Updates Metric with given *id*.

#### Security
Restricted to *EDITOR* project role that has the permission to update metadata of the project.

#### Response statuses
* 200 - OK - Metric was successfully updated
* 400 - Bad Request - there are syntax errors or validation violations
* 404 - Not Found - Metric with given id was not found
* 409 - Conflict - Metric with the same name or id already exists
* 412 - Precondition Failed - version provided in If-Match header is outdated
* 428 - Precondition Required - version was not provided in If-Match header

+ Request

    + Headers

            If-Match: "0"
            Content-Type: application/json
            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

### Delete Metric [DELETE /rest/projects/{projectId}/md/metrics/{id}]
Deletes Metric with given *id*.

#### Security
Restricted to *EDITOR* project role that has the permission to delete metadata of the project.

#### Response statuses
* 204 - No Content - Metric was successfully deleted
* 404 - Not Found - Metric with given id was not found

+ Request

    + Headers

            Authorization: Bearer {{accessToken}}

+ Response 204

## Views [/rest/projects/{projectId}/md/views]
View is a visualization of certain theme using a set of related Indicators and groups of objects (Markers or areas) displayed on a map. View also defines filters, which can be applied on its Indicators.

Detailed description in the [developer documentation](https://clevermaps.atlassian.net/wiki/spaces/CDD/pages/120336398/Views).

### Create View [POST]
Creates new View.

#### Security
Restricted to *EDITOR* project role that has the permission to update metadata of the project.

#### Response statuses
* 200 - OK - View was successfully created
* 400 - Bad Request - there are syntax errors or validation violations
* 409 - Conflict - View with the same name or id already exists

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer {{accessToken}}

    + Body

            {
                "name": "penetration",
                "type": "view",
                "title": "Orders",
                "description": "Detailed orders overview. This view shows regions where the biggest revenue is generated.",
                "content": {
                    "icon": "catchment_area",
                    "dashboard": "/rest/projects/$projectId/md/dashboards?name=penetration_dashboard",
                    "markerSelector": "/rest/projects/$projectId/md/markerSelectors?name=marker_selector_warehouse",
                    "filterGroup": [
                        {
                            "type": "globalDate",
                            "property": "objednavky_dwh.date",
                            "factDataset": "objednavky_dwh",
                            "defaultValues": {
                                "values": [
                                    "2016-10-01",
                                    "2016-12-31"
                                ]
                            }
                        },
                        {
                            "type": "date",
                            "property": "objednavky_dwh.date",
                            "factDataset": "objednavky_dwh",
                            "defaultValues": {
                                "values": [
                                    "2016-12-11",
                                    "2016-12-17"
                                ]
                            }
                        },
                        {
                            "type": "histogram",
                            "property": "objednavky_dwh.price",
                            "format": {
                                "type": "number",
                                "fraction": 0
                            }
                        },
                        {
                            "type": "multiSelect",
                            "property": "objednavky_dwh.day_nazev",
                            "orderBy": [
                                {
                                    "property": "objednavky_dwh.day",
                                    "direction": "asc"
                                }
                            ]
                        }
                    ],
                    "mapOptions": {
                        "center": {
                            "lat": 52.47,
                            "lng": -1.88
                        },
                        "zoom": 12,
                        "minZoom": 0,
                        "maxZoom": 18,
                        "tileLayer": "mapbox"
                    }
                }
            }

+ Response 200 (application/json)

            {
                "id": "pr0i7mi23lk8mspb",
                "name": "penetration",
                "type": "view",
                "title": "Orders",
                "description": "Detailed orders overview. This view shows regions where the biggest revenue is generated.",
                "content": {
                    "icon": "catchment_area",
                    "dashboard": "/rest/projects/$projectId/md/dashboards?name=penetration_dashboard",
                    "markerSelector": "/rest/projects/$projectId/md/markerSelectors?name=marker_selector_warehouse",
                    "filterGroup": [
                        {
                            "type": "globalDate",
                            "property": "objednavky_dwh.date",
                            "factDataset": "objednavky_dwh",
                            "defaultValues": {
                                "values": [
                                    "2016-10-01",
                                    "2016-12-31"
                                ]
                            }
                        },
                        {
                            "type": "date",
                            "property": "objednavky_dwh.date",
                            "factDataset": "objednavky_dwh",
                            "defaultValues": {
                                "values": [
                                    "2016-12-11",
                                    "2016-12-17"
                                ]
                            }
                        },
                        {
                            "type": "histogram",
                            "property": "objednavky_dwh.price",
                            "format": {
                                "type": "number",
                                "fraction": 0
                            }
                        },
                        {
                            "type": "multiSelect",
                            "property": "objednavky_dwh.day_nazev",
                            "orderBy": [
                                {
                                    "property": "objednavky_dwh.day",
                                    "direction": "asc"
                                }
                            ]
                        }
                    ],
                    "mapOptions": {
                        "center": {
                            "lat": 52.47,
                            "lng": -1.88
                        },
                        "zoom": 12,
                        "minZoom": 0,
                        "maxZoom": 18,
                        "tileLayer": "mapbox"
                    }
                },
                "accessInfo": {
                    "createdAt": "2017-10-18T12:31:34Z"
                },
                "links": [
                    {
                        "rel": "self",
                        "href": "/rest/projects/ld3y3gtm7jt6z1fx/md/views/pr0i7mi23lk8mspb"
                    }
                ]
            }

### Get View by id [GET /rest/projects/{projectId}/md/views/{id}]
Returns View with given *id*.

#### Response statuses
* 200 - OK
* 404 - Not Found

+ Parameters
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project
    + id: `uiir7hakk0cbgkbs` (string) - Id of the view


+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

            {
                "id": "uiir7hakk0cbgkbs",
                "name": "catchment_area",
                "type": "view",
                "title": "Catchment Area Analysis",
                "description": "Discover the areas with the biggest or lowest customer base and find out ...",
                "content": {
                    "icon": "catchment_area",
                    "dashboard": "/rest/projects/vb2b3d8v91jao331/md/dashboards?name=catchment_area_dashboard",
                    "markerSelector": "/rest/projects/vb2b3d8v91jao331/md/markerSelectors?name=marker_selector_shops",
                    "filterGroup": [
                        {
                            "type": "globalDate",
                            "property": "dim_dates.date_iso",
                            "factDataset": "baskets",
                            "defaultValues": {
                                "values": [
                                    "2017-09-24",
                                    "2017-09-30"
                                ]
                            }
                        },
                        {
                            "type": "histogram",
                            "property": "baskets.amount",
                            "format": {
                                "type": "number",
                                "fraction": 0,
                                "symbol": "£"
                            }
                        },
                        {
                            "type": "multiSelect",
                            "property": "baskets.on_off_name",
                            "orderBy": [
                                {
                                    "property": "baskets.on_off_name",
                                    "direction": "asc"
                                }
                            ]
                        },
                        {
                            "type": "multiSelect",
                            "property": "baskets.courier",
                            "orderBy": [
                                {
                                    "property": "baskets.courier",
                                    "direction": "asc"
                                }
                            ]
                        }
                    ],
                    "mapOptions": {
                        "center": {
                            "lat": 52.47,
                            "lng": -1.88
                        },
                        "zoom": 12,
                        "minZoom": 0,
                        "maxZoom": 18,
                        "tileLayer": "mapbox"
                    }
                },
                "accessInfo": {
                    "createdAt": "2018-01-25T15:29:50Z"
                },
                "links": [
                    {
                        "rel": "self",
                        "href": "/rest/projects/vb2b3d8v91jao331/md/views/uiir7hakk0cbgkbs"
                    }
                ]
            }

### Get View by name [GET /rest/projects/{projectId}/md/views{?name}]
Returns View with given *name*.

#### Response statuses
* 200 - OK
* 404 - Not Found

+ Parameters
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project
    + name: `catchment_area` (string) - Name of the view

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

            {
                "id": "uiir7hakk0cbgkbs",
                "name": "catchment_area",
                "type": "view",
                "title": "Catchment Area Analysis",
                "description": "Discover the areas with the biggest or lowest customer base and find out ...",
                "content": {
                    "icon": "catchment_area",
                    "dashboard": "/rest/projects/vb2b3d8v91jao331/md/dashboards?name=catchment_area_dashboard",
                    "markerSelector": "/rest/projects/vb2b3d8v91jao331/md/markerSelectors?name=marker_selector_shops",
                    "filterGroup": [
                        {
                            "type": "globalDate",
                            "property": "dim_dates.date_iso",
                            "factDataset": "baskets",
                            "defaultValues": {
                                "values": [
                                    "2017-09-24",
                                    "2017-09-30"
                                ]
                            }
                        },
                        {
                            "type": "histogram",
                            "property": "baskets.amount",
                            "format": {
                                "type": "number",
                                "fraction": 0,
                                "symbol": "£"
                            }
                        },
                        {
                            "type": "multiSelect",
                            "property": "baskets.on_off_name",
                            "orderBy": [
                                {
                                    "property": "baskets.on_off_name",
                                    "direction": "asc"
                                }
                            ]
                        },
                        {
                            "type": "multiSelect",
                            "property": "baskets.courier",
                            "orderBy": [
                                {
                                    "property": "baskets.courier",
                                    "direction": "asc"
                                }
                            ]
                        }
                    ],
                    "mapOptions": {
                        "center": {
                            "lat": 52.47,
                            "lng": -1.88
                        },
                        "zoom": 12,
                        "minZoom": 0,
                        "maxZoom": 18,
                        "tileLayer": "mapbox"
                    }
                },
                "accessInfo": {
                    "createdAt": "2018-01-25T15:29:50Z"
                },
                "links": [
                    {
                        "rel": "self",
                        "href": "/rest/projects/vb2b3d8v91jao331/md/views/uiir7hakk0cbgkbs"
                    }
                ]
            }

### List Views [GET /rest/projects/{projectId}/md/views{?page,size,sort}]
Returns paged collection of all Views in a project.

#### Response statuses
* 200 - OK

+ Parameters
    + projectId: `vb2b3d8v91jao331` (string) - The ID of an actual project
    + size (optional, number) - The count of records to return for one page
        + Default: `20`
    + page (optional, number) - Number of the page
        + Default: `0`
    + sort: `name,asc` (optional, string) - Name of the attribute to use for sorting the results, together with direction (`asc` or `desc`)

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

            {
                "links": [
                    {
                        "rel": "self",
                        "href": "/rest/projects/vb2b3d8v91jao331/md/views?page=0&size=20"
                    }
                ],
                "content": [
                    {
                        "id": "uiir7hakk0cbgkbs",
                        "name": "catchment_area",
                        "type": "view",
                        "title": "Catchment Area Analysis",
                        "description": "Discover the areas with the biggest or lowest customer base and find out ...",
                        "content": {
                            "icon": "catchment_area",
                            "dashboard": "/rest/projects/vb2b3d8v91jao331/md/dashboards?name=catchment_area_dashboard",
                            "markerSelector": "/rest/projects/vb2b3d8v91jao331/md/markerSelectors?name=marker_selector_shops",
                            "filterGroup": [
                                {
                                    "type": "histogram",
                                    "property": "baskets.amount"
                                }
                            ],
                            "mapOptions": {
                                "center": {
                                    "lat": 52.47,
                                    "lng": -1.88
                                },
                                "zoom": 12,
                                "minZoom": 0,
                                "maxZoom": 18,
                                "tileLayer": "mapbox"
                            }
                        },
                        "accessInfo": {
                            "createdAt": "2018-01-25T15:29:50Z"
                        },
                        "links": [
                            {
                                "rel": "self",
                                "href": "/rest/projects/vb2b3d8v91jao331/md/views/uiir7hakk0cbgkbs"
                            }
                        ]
                    }
                ],
                "page": {
                    "size": 20,
                    "totalElements": 3,
                    "totalPages": 1,
                    "number": 0
                }
            }

### Update View [PUT /rest/projects/{projectId}/md/views/{id}]
Updates View with given *id*.

#### Security
Restricted to *EDITOR* project role that has the permission to update metadata of the project.

#### Response statuses
* 200 - OK - View was successfully updated
* 400 - Bad Request - there are syntax errors or validation violations
* 404 - Not Found - View with given id was not found
* 409 - Conflict - View with the same name or id already exists
* 412 - Precondition Failed - version provided in If-Match header is outdated
* 428 - Precondition Required - version was not provided in If-Match header

+ Request

    + Headers

            If-Match: "0"
            Content-Type: application/json
            Accept: application/json
            Authorization: Bearer {{accessToken}}

+ Response 200 (application/json)

### Delete View [DELETE /rest/projects/{projectId}/md/views/{id}]
Deletes View with given *id*.

#### Security
Restricted to *EDITOR* project role that has the permission to delete metadata of the project.

#### Response statuses
* 204 - No Content - View was successfully deleted
* 404 - Not Found - View with given id was not found

+ Request

    + Headers

            Authorization: Bearer {{accessToken}}

+ Response 204